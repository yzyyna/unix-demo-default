{"version":3,"sources":["uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts","uni_modules/fpss-modbus-tcp/utssdk/interface.uts"],"sourcesContent":["import { connectType, connectType2 } from '../interface.uts'\nimport { UInt16 } from 'Swift';\n\n\n\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.130.30', port = 502,\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\nexport const connect : connectType = function () {\n\tFPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\n\t\tcompletion = (Bool : Boolean, Error : any) => {\n\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:11',Bool ? '链接成功' : '连接失败');\n\t\t\tif (Bool) {\n\t\t\t\tconst startA : UInt16 = 0x00\n\t\t\t\tconst countA : UInt16 = 5\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:15',`开始读取起始地址:${startA}寄存器数量:${countA}`);\n\t\t\t\tFPSSModbusTcpNative.readHoldingRegisters(startAddress = startA, count = countA, completion = (UInt16 : any, Error : any) => {\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:17','读取结束');\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:18',UInt16, JSON.stringify(Error));\n\t\t\t\t\t// 断开连接\n\t\t\t\t\tdisConnect()\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:23',Error);\n\t\t\t}\n\t\t})\n}\n// 直接导出disConnect函数，移除中间变量disConnect0\nexport const disConnect : connectType = function () {\n\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:29','断开连接');\n\tFPSSModbusTcpNative.disconnectModbusServer()\n}\nexport const myApi : connectType = function () {\n\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:33',\"%c ✨ myApi??? ✨ \", \"color:#0ff;\");\n\tFPSSModbusTcpNative.myApiNa()\n}","// 声明 uts 插件的 API 类型  \r\n\r\n\r\n/**\r\n * 声明连接Modbus服务器API类型\r\n * connect\r\n */\r\nexport type connectType = () => void\r\nexport type connectType2 = (cb : (flag : Boolean) => void) => void"],"names":[],"mappings":";;AACA,YAA+B;iBCMnB,oBAAoB,IAAI;ADA7B,WAAM,uBAAwB;;AACpC,oBAAoB,qBAAqB,CAAC,MAAO,mBAAmB,MAAO,GAAG,EAC7E,YAAa;GAAC,MAAO,QAAS,UAAQ,GAAG;AACxC,YAAyE,OAAO,SAAS,MAAM;AAC/F,IAAI,MAAM;IACT,IAAM,QAAS,SAAS,IAAI;IAC5B,IAAM,QAAS,SAAS,CAAC;IACzB,YAAyE;AAAA,SAAA,EAAY,OAAM,MAAA,EAAS,OAAM;GAAE;IAC5G,oBAAoB,oBAAoB,CAAC,cAAe,QAAQ,OAAQ,QAAQ,YAAa;OAAC,SAAS,GAAG,IAAE,UAAQ,GAAG;IACtH,YAAyE;IACzE,YAAyE,SAAQ,KAAK,SAAS,CAAC;IAEhG;;OAEK;IACN,YAAyE;;;;AAKtE,WAAM,0BAA2B;;AACvC,YAAyE;AACzE,oBAAoB,sBAAsB;;AAEpC,WAAM,qBAAsB;;AAClC,YAAyE,oBAAoB;AAC7F,oBAAoB,OAAO;;6BC1BI,IAAI;;;gCAAJ,IAAI;;;2BAAJ,IAAI;;;;;;0CAAJ,IAAI;;;6CAAJ,IAAI;;;wCAAJ,IAAI"}