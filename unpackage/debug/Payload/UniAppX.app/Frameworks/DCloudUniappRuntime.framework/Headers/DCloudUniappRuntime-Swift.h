#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef DCLOUDUNIAPPRUNTIME_SWIFT_H
#define DCLOUDUNIAPPRUNTIME_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreGraphics;
@import Foundation;
@import JavaScriptCore;
@import ObjectiveC;
@import UIKit;
#endif

#import <DCloudUniappRuntime/DCloudUniappRuntime.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DCloudUniappRuntime",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
@protocol UniElement;
@protocol UniPage;
@protocol JSExport;
@class UTSJSONObject;

SWIFT_CLASS_NAMED("ComponentPublicInstance")
@interface ComponentPublicInstance : NSObject
@property (nonatomic, copy) NSString * _Nonnull nodeId;
@property (nonatomic, copy) NSString * _Nonnull pageId;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable __$$el;
@property (nonatomic, readonly, strong) id <UniPage> _Nullable __$$page;
- (id <JSExport> _Nullable)__$$el:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(UTSJSONObject * _Nonnull)obj OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime7Console_")
@protocol Console <JSExport>
+ (void)log;
+ (void)debug;
+ (void)info;
+ (void)error;
+ (void)warn;
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime21CustomElementRegistry_")
@protocol CustomElementRegistry
/// 定义一个自定义元素
- (void)define:(NSString * _Nonnull)name :(Class <UniElement> _Nonnull)constructor;
/// 获取一个自定义元素构造函数
- (Class <UniElement> _Nullable)get:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime7DOMRect")
@interface DOMRect : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class NSNumber;

SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime15DrawableContext_")
@protocol DrawableContext <JSExport>
/// 设置用于填充图形的颜色
@property (nonatomic, copy) NSString * _Nullable fillStyle;
/// 文字大小
@property (nonatomic) id _Nonnull font;
/// 设置线条末端样式
@property (nonatomic, copy) NSString * _Nullable lineCap;
/// 设置虚线样式的起始偏移量
@property (nonatomic, strong) NSNumber * _Nonnull lineDashOffset;
/// 设置线条连接处的样式
@property (nonatomic, copy) NSString * _Nullable lineJoin;
/// 设置线条宽度
@property (nonatomic) id _Nonnull lineWidth;
/// 设置用于描边图形的颜色
@property (nonatomic, copy) NSString * _Nullable strokeStyle;
/// 设置文本的对齐方式
@property (nonatomic, copy) NSString * _Nullable textAlign;
/// 清除绘制的所有内容
- (void)reset;
/// 同步绘制内容
- (void)update;
/// 创建一条新路径，之前的路径被清除
- (void)beginPath;
/// 将路径起点移动到指定点
/// \param x x坐标
///
/// \param y y坐标
///
- (void)moveTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// 使用直线连接子路径
/// \param x x坐标
///
/// \param y y坐标
///
- (void)lineTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// 添加一个圆弧路径
/// \param x 圆心x坐标
///
/// \param y 圆心y坐标
///
/// \param radius 半径
///
/// \param startAngle 起始角度
///
/// \param endAngle 结束角度
///
/// \param counterclockwise 圆弧应该是顺时针还是逆时针方向绘制。如果为 false，则顺时针绘制；如果为 true，则逆时针绘制 (注意：iOS api 参数是 clockwise，取反)
///
- (void)arc:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)radius :(NSNumber * _Nonnull)startAngle :(NSNumber * _Nonnull)endAngle :(BOOL)counterclockwise;
- (void)arc:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)radius :(NSNumber * _Nonnull)startAngle :(NSNumber * _Nonnull)endAngle;
/// 添加一个圆弧路径
/// \param x1 第一个控制点x坐标
///
/// \param y1 第一个控制点y坐标
///
/// \param x2 第二个控制点x坐标
///
/// \param y2 第二个控制点y坐标
///
/// \param radius 圆弧半径
///
- (void)arcTo:(NSNumber * _Nonnull)x1 :(NSNumber * _Nonnull)y1 :(NSNumber * _Nonnull)x2 :(NSNumber * _Nonnull)y2 :(NSNumber * _Nonnull)radius;
/// 将当前路径的结束点和起始点连接起来，形成一个闭合路径
- (void)closePath;
/// 填充当前路径
/// \param fillRule 填充路径时使用的规则，可以是:“nonzero” 非零环绕数规则（默认），或 “evenodd” 偶数-奇数规则
///
- (void)fill:(NSString * _Nonnull)fillRule;
- (void)fill;
/// 在画布上绘制一个填充的矩形
/// \param x x坐标
///
/// \param y y坐标
///
/// \param width 宽
///
/// \param height 高
///
- (void)fillRect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
/// 在画布上绘制填充的文本
/// \param text 文本内容
///
/// \param x x坐标
///
/// \param y y坐标
///
/// \param maxWidth 最大宽度（可选 默认不限制）
///
- (void)fillText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)maxWidth;
- (void)fillText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// 创建一个矩形路径
/// \param x x坐标
///
/// \param y y坐标
///
/// \param width 宽
///
/// \param height 高
///
- (void)rect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
/// 设置虚线样式
/// \param lengths 虚线的样式，以数组形式指定，例如 [5, 10] 表示绘制一条长度为 5 的实线，然后跳过长度为 10 的空白，再绘制一条长度为 5 的实线，再跳过长度为 10 的空白，如此往复重复绘制。
///
- (void)setLineDash:(NSArray<NSNumber *> * _Nonnull)lengths;
/// 在当前路径上绘制线条
- (void)stroke;
/// 在画布上绘制一个描边的矩形
/// \param x x坐标
///
/// \param y y坐标
///
/// \param width 宽
///
/// \param height 高
///
- (void)strokeRect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
/// 在画布上绘制描边的文本
/// \param text 文本内容
///
/// \param x x坐标
///
/// \param y y坐标
///
/// \param maxWidth 最大宽度（可选 默认不限制）
///
- (void)strokeText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)maxWidth;
- (void)strokeText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// 添加一条贝赛尔曲线
/// \param x1 第一个控制点的x坐标
///
/// \param y1 第一个控制点的y坐标
///
/// \param x2 第二个控制点的x坐标
///
/// \param y2 第二个控制点的y坐标
///
/// \param x 终点x坐标
///
/// \param y 终点y坐标
///
- (void)bezierCurveTo:(NSNumber * _Nonnull)x1 :(NSNumber * _Nonnull)y1 :(NSNumber * _Nonnull)x2 :(NSNumber * _Nonnull)y2 :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21ExitFullscreenOptions")
@interface ExitFullscreenOptions : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime9INodeData_")
@protocol INodeData
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attrs;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull style;
+ (id <INodeData> _Nonnull)formDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
@end










/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC19DCloudUniappRuntime15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;

@interface SessionDelegate (SWIFT_EXTENSION(DCloudUniappRuntime)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSData;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(DCloudUniappRuntime)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;
@class NSURL;

@interface SessionDelegate (SWIFT_EXTENSION(DCloudUniappRuntime)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(DCloudUniappRuntime)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end

@class UIColor;
@class UIImage;
@class NSCoder;
@class UITouch;
@class UIEvent;

IB_DESIGNABLE
SWIFT_CLASS("_TtC19DCloudUniappRuntime11SevenSwitch")
@interface SevenSwitch : UIButton
@property (nonatomic) IBInspectable BOOL on;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull activeColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull inactiveColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull onTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull borderColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull thumbTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull onThumbTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull shadowColor;
@property (nonatomic) IBInspectable BOOL isRounded;
@property (nonatomic, strong) IBInspectable UIImage * _Null_unspecified thumbImage;
@property (nonatomic, strong) IBInspectable UIImage * _Null_unspecified onImage;
@property (nonatomic, strong) IBInspectable UIImage * _Null_unspecified offImage;
- (nonnull instancetype)init;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
- (void)cancelTrackingWithEvent:(UIEvent * _Nullable)event;
- (void)layoutSubviews;
@end


/// 组件截图的参数配置选项
SWIFT_CLASS("_TtC19DCloudUniappRuntime19TakeSnapshotOptions")
@interface TakeSnapshotOptions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UTSSourceMapPosition;

SWIFT_CLASS_NAMED("TextShadowResult")
@interface UTSSDKModulesUniCssParserTextShadowResult : NSObject
- (UTSSourceMapPosition * _Nullable)__$getOriginalPosition SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Null_unspecified offsetX;
@property (nonatomic, copy) NSString * _Null_unspecified offsetY;
@property (nonatomic, copy) NSString * _Null_unspecified blurRadius;
@property (nonatomic, copy) NSString * _Nullable color;
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(UTSJSONObject * _Nonnull)obj OBJC_DESIGNATED_INITIALIZER;
@end









SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIImage (SWIFT_EXTENSION(DCloudUniappRuntime))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull keyboardPreviousImage;)
+ (UIImage * _Nonnull)keyboardPreviousImage SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIImage * _Nonnull keyboardNextImage;)
+ (UIImage * _Nonnull)keyboardNextImage SWIFT_WARN_UNUSED_RESULT;
@end





SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIScrollView (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) BOOL shouldIgnoreScrollingAdjustment SWIFT_UNAVAILABLE_MSG("'shouldIgnoreScrollingAdjustment' has been renamed to 'iq.ignoreScrollingAdjustment'");
@property (nonatomic) BOOL shouldIgnoreContentInsetAdjustment SWIFT_UNAVAILABLE_MSG("'shouldIgnoreContentInsetAdjustment' has been renamed to 'iq.ignoreContentInsetAdjustment'");
@property (nonatomic) BOOL shouldRestoreScrollViewContentOffset SWIFT_UNAVAILABLE_MSG("'shouldRestoreScrollViewContentOffset' has been renamed to 'iq.restoreContentOffset'");
@end








@class UIViewController;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIView (SWIFT_EXTENSION(DCloudUniappRuntime))
- (UIViewController * _Nullable)viewContainingController SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'viewContainingController' has been renamed to 'iq.viewContainingController()'");
- (UIViewController * _Nullable)topMostController SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'topMostController' has been renamed to 'iq.topMostController()'");
- (UIViewController * _Nullable)parentContainerViewController SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'parentContainerViewController' has been renamed to 'iq.parentContainerViewController()'");
- (UIView * _Nullable)superviewOfClassType:(SWIFT_METATYPE(UIView) _Nonnull)classType belowView:(UIView * _Nullable)belowView SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'superviewOfClassType' has been renamed to 'iq.superviewOf(type:belowView:)'");
@end



enum UniIQEnableMode : NSInteger;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIView (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) CGFloat keyboardDistanceFromTextField SWIFT_UNAVAILABLE_MSG("'keyboardDistanceFromTextField' has been renamed to 'iq.distanceFromKeyboard'");
@property (nonatomic) BOOL ignoreSwitchingByNextPrevious SWIFT_UNAVAILABLE_MSG("'ignoreSwitchingByNextPrevious' has been renamed to 'iq.ignoreSwitchingByNextPrevious'");
@property (nonatomic) enum UniIQEnableMode enableMode SWIFT_UNAVAILABLE_MSG("'enableMode' has been renamed to 'iq.enableMode'");
@property (nonatomic) enum UniIQEnableMode shouldResignOnTouchOutsideMode SWIFT_UNAVAILABLE_MSG("'shouldResignOnTouchOutsideMode' has been renamed to 'iq.resignOnTouchOutsideMode'");
@end

@class UniIQToolbar;
@class UniIQBarButtonItemConfiguration;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIView (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic, strong) UniIQToolbar * _Nonnull keyboardToolbar SWIFT_UNAVAILABLE_MSG("'keyboardToolbar' has been renamed to 'iq.toolbar'");
@property (nonatomic) BOOL shouldHideToolbarPlaceholder SWIFT_UNAVAILABLE_MSG("'shouldHideToolbarPlaceholder' has been renamed to 'iq.hidePlaceholder'");
@property (nonatomic, copy) NSString * _Nullable toolbarPlaceholder SWIFT_UNAVAILABLE_MSG("'toolbarPlaceholder' has been renamed to 'iq.placeholder'");
@property (nonatomic, copy) NSString * _Nullable drawingToolbarPlaceholder SWIFT_UNAVAILABLE_MSG("'drawingToolbarPlaceholder' has been renamed to 'iq.drawingPlaceholder'");
- (void)addKeyboardToolbarWithTargetWithTarget:(id _Nullable)target titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel rightBarButtonConfiguration:(UniIQBarButtonItemConfiguration * _Nullable)rightBarButtonConfiguration previousBarButtonConfiguration:(UniIQBarButtonItemConfiguration * _Nullable)previousBarButtonConfiguration nextBarButtonConfiguration:(UniIQBarButtonItemConfiguration * _Nullable)nextBarButtonConfiguration SWIFT_UNAVAILABLE_MSG("'addKeyboardToolbarWithTarget' has been renamed to 'iq.addToolbar(target:previousConfiguration:nextConfiguration:rightConfiguration:title:titleAccessibilityLabel:)'");
- (void)addDoneOnKeyboardWithTarget:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addDoneOnKeyboardWithTarget' has been renamed to 'iq.addDone(target:action:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addDoneOnKeyboardWithTarget:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addDoneOnKeyboardWithTarget' has been renamed to 'iq.addDone(target:action:title:titleAccessibilityLabel:)'");
- (void)addRightButtonOnKeyboardWithImage:(UIImage * _Nonnull)image target:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightButtonOnKeyboardWithImage' has been renamed to 'iq.addRightButton(target:configuration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addRightButtonOnKeyboardWithImage:(UIImage * _Nonnull)image target:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightButtonOnKeyboardWithImage' has been renamed to 'iq.addRightButton(target:configuration:title:titleAccessibilityLabel:)'");
- (void)addRightButtonOnKeyboardWithText:(NSString * _Nonnull)text target:(id _Nullable)target action:(SEL _Nonnull)action shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightButtonOnKeyboardWithText' has been renamed to 'iq.addRightButton(target:configuration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addRightButtonOnKeyboardWithText:(NSString * _Nonnull)text target:(id _Nullable)target action:(SEL _Nonnull)action titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightButtonOnKeyboardWithText' has been renamed to 'iq.addRightButton(target:configuration:title:titleAccessibilityLabel:)'");
- (void)addCancelDoneOnKeyboardWithTarget:(id _Nullable)target cancelAction:(SEL _Nonnull)cancelAction doneAction:(SEL _Nonnull)doneAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addCancelDoneOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonTitle:(NSString * _Nonnull)leftButtonTitle rightButtonTitle:(NSString * _Nonnull)rightButtonTitle leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightLeftOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonImage:(UIImage * _Nonnull)leftButtonImage rightButtonImage:(UIImage * _Nonnull)rightButtonImage leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightLeftOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addCancelDoneOnKeyboardWithTarget:(id _Nullable)target cancelAction:(SEL _Nonnull)cancelAction doneAction:(SEL _Nonnull)doneAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addCancelDoneOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:title:titleAccessibilityLabel:)'");
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonTitle:(NSString * _Nonnull)leftButtonTitle rightButtonTitle:(NSString * _Nonnull)rightButtonTitle leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightLeftOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:title:titleAccessibilityLabel:)'");
- (void)addRightLeftOnKeyboardWithTarget:(id _Nullable)target leftButtonImage:(UIImage * _Nonnull)leftButtonImage rightButtonImage:(UIImage * _Nonnull)rightButtonImage leftButtonAction:(SEL _Nonnull)leftButtonAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addRightLeftOnKeyboardWithTarget' has been renamed to 'iq.addRightLeft(target:rightConfiguration:leftConfiguration:title:titleAccessibilityLabel:)'");
- (void)addPreviousNextDone:(id _Nullable)target previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction doneAction:(SEL _Nonnull)doneAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextDone' has been renamed to 'iq.addPreviousNextDone(target:previousAction:nextAction:doneAction:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addPreviousNextDoneOnKeyboardWithTarget:(id _Nullable)target previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction doneAction:(SEL _Nonnull)doneAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextDoneOnKeyboardWithTarget' has been renamed to 'iq.addPreviousNextDone(target:previousAction:nextAction:doneAction:title:titleAccessibilityLabel:)'");
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonImage:(UIImage * _Nonnull)rightButtonImage previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextRightOnKeyboardWithTarget' has been renamed to 'iq.addPreviousNextRight(target:previousConfiguration:nextConfiguration:rightConfiguration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonTitle:(NSString * _Nonnull)rightButtonTitle previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction shouldShowPlaceholder:(BOOL)shouldShowPlaceholder titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextRightOnKeyboardWithTarget' has been renamed to 'iq.addPreviousNextRight(target:previousConfiguration:nextConfiguration:rightConfiguration:showPlaceholder:titleAccessibilityLabel:)'");
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonImage:(UIImage * _Nonnull)rightButtonImage previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextRightOnKeyboardWithTarget' has been renamed to 'iq.addPreviousNextRight(target:previousConfiguration:nextConfiguration:rightConfiguration:title:titleAccessibilityLabel:)'");
- (void)addPreviousNextRightOnKeyboardWithTarget:(id _Nullable)target rightButtonTitle:(NSString * _Nonnull)rightButtonTitle previousAction:(SEL _Nonnull)previousAction nextAction:(SEL _Nonnull)nextAction rightButtonAction:(SEL _Nonnull)rightButtonAction titleText:(NSString * _Nullable)titleText titleAccessibilityLabel:(NSString * _Nullable)titleAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'addPreviousNextRightOnKeyboardWithTarget' has been renamed to 'iq.addPreviousNextRight(target:previousConfiguration:nextConfiguration:rightConfiguration:title:titleAccessibilityLabel:)'");
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIViewController (SWIFT_EXTENSION(DCloudUniappRuntime))
/// This method is provided to override by viewController’s
/// if the library lifts a viewController which you doesn’t want to lift.
/// This may happen if you have implemented side menu feature
/// in your app and the library try to lift the side menu controller.
/// Overriding this method in side menu class to return correct controller should fix the problem.
- (UIViewController * _Nullable)iq_parentContainerViewController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UIViewController (SWIFT_EXTENSION(DCloudUniappRuntime))
- (UIViewController * _Nullable)parentIQContainerViewController SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE_MSG("'parentIQContainerViewController' has been renamed to 'iq_parentContainerViewController'");
@end




SWIFT_CLASS_NAMED("UTSDomNode")
@interface UTSDomNode : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@protocol UniProvider;
@class ArrayBuffer;
@class JSValue;
@class TypedArray;

SWIFT_CLASS_NAMED("UTSRuntimeBridge")
@interface UTSRuntimeBridge : NSObject
/// 获取当前 app 显示的 UIViewController
+ (UIViewController * _Nonnull)getCurrentViewController SWIFT_WARN_UNUSED_RESULT;
/// 获取当前app的keyWindow
+ (UIWindow * _Nonnull)getKeyWindow SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 color
+ (UIColor * _Nonnull)convertColor:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 String
+ (NSString * _Nonnull)convertString:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 Bool
+ (BOOL)convertBool:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 NSNumber
+ (NSNumber * _Nonnull)convertNumber:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 Double
+ (double)convertDouble:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 Float
+ (float)convertFloat:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
/// 将数据转换为 Int
+ (NSInteger)convertInt:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)originTypeFromNumber:(NSNumber * _Nonnull)number SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nonnull)aesDecrypt:(NSData * _Nonnull)data :(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// 获取应用资源路径 /uniappx
+ (NSString * _Nonnull)rumtimeDataPath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)appsPath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)wwwPath SWIFT_WARN_UNUSED_RESULT;
+ (void)ensureDirExist:(NSString * _Nonnull)path;
+ (NSString * _Nonnull)getAppName SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getAppId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getAppVersionCode SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getAppVersion SWIFT_WARN_UNUSED_RESULT;
///
+ (NSString * _Nonnull)getInnerVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getRuntimeVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getCompilerVersion SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getChannel SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)getIsOnline SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getHxVersion SWIFT_WARN_UNUSED_RESULT;
/// 获取当前运行app的dataPath
+ (NSString * _Nonnull)appDataPath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getResourcePath:(NSString * _Nonnull)resourceName SWIFT_WARN_UNUSED_RESULT;
/// 获取UserAgent
+ (NSString * _Nonnull)getUserAgent SWIFT_WARN_UNUSED_RESULT;
/// 获取deviceId
+ (NSString * _Nonnull)getDeviceId SWIFT_WARN_UNUSED_RESULT;
/// 获取设备型号
+ (NSString * _Nonnull)getDeviceModel SWIFT_WARN_UNUSED_RESULT;
/// 获取当前系统语言
+ (NSString * _Nonnull)getSystemLanguage SWIFT_WARN_UNUSED_RESULT;
/// 获取当前系统主题
+ (NSString * _Nonnull)getOsTheme SWIFT_WARN_UNUSED_RESULT;
/// 监听系统主题变化
/// \param callback 监听函数
///
///
/// returns:
/// 监听id
+ (NSNumber * _Nonnull)onOsThemeChange:(void (^ _Nonnull)(NSString * _Nonnull))callback SWIFT_WARN_UNUSED_RESULT;
/// 取消监听系统主题变化
/// \param id 监听id
///
+ (void)offOsThemeChange:(NSNumber * _Nonnull)id;
/// 获取当前app主题
+ (NSString * _Nonnull)getAppTheme SWIFT_WARN_UNUSED_RESULT;
/// 设置当前app主题
+ (void)setAppTheme:(NSString * _Nonnull)theme;
/// 监听app主题变化
+ (NSNumber * _Nonnull)onAppThemeChange:(void (^ _Nonnull)(NSString * _Nonnull))callback SWIFT_WARN_UNUSED_RESULT;
/// 取消监听app主题变化
+ (void)offAppThemeChange:(NSNumber * _Nonnull)id;
/// 设备是否越狱
+ (BOOL)isRoot SWIFT_WARN_UNUSED_RESULT;
/// 获取idfa
+ (NSString * _Nonnull)getGgbs SWIFT_WARN_UNUSED_RESULT;
/// 获取当前系统设置
+ (NSDictionary<NSString *, id> * _Nonnull)getSystemSetting SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)getAppAuthorizeSetting SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)getWindowInfo SWIFT_WARN_UNUSED_RESULT;
/// 重新加载应用
+ (void)reloadApp:(BOOL)isDebug;
/// 打印调试信息
+ (void)logDebug:(NSString * _Nonnull)log;
/// 获取字体文件路径
+ (NSString * _Nullable)getFontFilePath:(NSString * _Nonnull)fontFamily SWIFT_WARN_UNUSED_RESULT;
+ (void)setDeviceInterfaceOrientation:(UIInterfaceOrientation)toOrientaiton;
+ (BOOL)checkIfSupportOrientation:(UIInterfaceOrientation)orientation SWIFT_WARN_UNUSED_RESULT;
+ (void)lockScreen;
+ (void)unLockScreen;
+ (BOOL)isScreenLocked SWIFT_WARN_UNUSED_RESULT;
+ (void)setTempOrientation:(UIInterfaceOrientationMask)orientation;
/// 获取App支持的屏幕方向
/// \param orientation 屏幕方向
///
+ (UIInterfaceOrientationMask)getSupportOrientation SWIFT_WARN_UNUSED_RESULT;
+ (void)loadImage:(NSString * _Nonnull)url :(void (^ _Nonnull)(UIImage * _Nullable, NSData * _Nullable))complete;
+ (NSString * _Nonnull)getResourceAbsolutePath:(NSString * _Nonnull)h5Path :(NSString * _Nullable)basePath SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getMediaCacheDir SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getVideoCacheDir SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)convert2AbsFullPath:(NSString * _Nonnull)path SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<id <UniProvider>> * _Nonnull)getProviders:(NSString * _Nonnull)service SWIFT_WARN_UNUSED_RESULT;
+ (id <UniElement> _Nullable)getUniElement:(NSString * _Nonnull)pageId :(NSString * _Nonnull)nodeId SWIFT_WARN_UNUSED_RESULT;
/// 释放uts创建的对象
/// \param obj uts创建的对象
///
+ (void)destroyInstance:(id _Nonnull)obj;
+ (void)runOnJsQueue:(void (^ _Nonnull)(void))work;
/// 设置当前应用是否已取得用户同意隐私协议
/// \param isAgree true 用户已同意 false 用户未同意
///
+ (void)setPrivacyAgree:(BOOL)isAgree;
/// 当前应用是否已取得用户同意隐私协议
///
/// returns:
/// true 用户已同意 false 用户未同意
+ (BOOL)isPrivacyAgree SWIFT_WARN_UNUSED_RESULT;
/// 监听隐私状态变化
+ (NSNumber * _Nonnull)onPrivacyAgreeChange:(void (^ _Nonnull)(BOOL))callback SWIFT_WARN_UNUSED_RESULT;
/// 取消监听隐私状态变化
+ (void)offPrivacyAgreeChange:(NSNumber * _Nonnull)id;
/// 仅原生SDK使用 用于退出uniapp页面
+ (BOOL)exit SWIFT_WARN_UNUSED_RESULT;
+ (JSValue * _Nonnull)arrayBuffer2JSValue:(ArrayBuffer * _Nonnull)buffer SWIFT_WARN_UNUSED_RESULT;
+ (JSValue * _Nonnull)typedArray2JSValue:(TypedArray * _Nonnull)buffer SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)utsAtob:(NSString * _Nonnull)str SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)utsBtoa:(NSString * _Nonnull)str SWIFT_WARN_UNUSED_RESULT;
/// 隐藏键盘
+ (void)hideKeyboard;
/// 监听键盘高度变化
+ (NSNumber * _Nonnull)onKeyboardHeightChange:(void (^ _Nonnull)(NSNumber * _Nonnull))callback SWIFT_WARN_UNUSED_RESULT;
/// 取消监听键盘高度变化
+ (void)offKeyboardHeightChange:(NSNumber * _Nullable)id;
/// 获取输入框的光标位置
+ (void)getSelectedTextRange:(void (^ _Nonnull)(NSNumber * _Nullable, NSNumber * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol UniApp;

SWIFT_CLASS("_TtC19DCloudUniappRuntime6UTSiOS")
@interface UTSiOS : NSObject
+ (id <UniApp> _Nonnull)getApp SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIApplication;
@class NSUserActivity;
@protocol UIUserActivityRestoring;

SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime15UTSiOSHookProxy_")
@protocol UTSiOSHookProxy
@optional
- (void)onCreate;
- (BOOL)applicationDidFinishLaunchingWithOptions:(UIApplication * _Nullable)application :(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)didRegisterForRemoteNotifications:(NSData * _Nullable)deviceToken;
- (void)didFailToRegisterForRemoteNotifications:(NSError * _Nullable)error;
- (void)applicationDidReceiveRemoteNotificationCompletionHandler:(UIApplication * _Nullable)application :(NSDictionary * _Nonnull)userInfo :(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (BOOL)applicationOpenURLOptions:(UIApplication * _Nullable)application :(NSURL * _Nonnull)url :(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nullable)options SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nullable)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nullable)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nullable)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nullable)application;
- (BOOL)applicationContinueUserActivityRestorationHandler:(UIApplication * _Nullable)application :(NSUserActivity * _Nullable)userActivity :(void (^ _Nonnull)(NSArray<id <UIUserActivityRestoring>> * _Nullable))restorationHandler SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("UTSiOSHookProxyManager")
@interface UTSiOSHookProxyManager : NSObject
+ (void)addProxy:(id <UTSiOSHookProxy> _Nonnull)proxy;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UniAnimationPlaybackEvent;

SWIFT_PROTOCOL_NAMED("UniAnimation")
@protocol UniAnimation <NSObject>
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull playState;
@property (nonatomic, copy) void (^ _Nullable oncancel)(UniAnimationPlaybackEvent * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onfinish)(UniAnimationPlaybackEvent * _Nonnull);
- (void)cancel;
- (void)finish;
- (void)pause;
- (void)play;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime16UniAnimationImpl")
@interface UniAnimationImpl : NSObject <UniAnimation>
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull playState;
@property (nonatomic, copy) void (^ _Nullable oncancel)(UniAnimationPlaybackEvent * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onfinish)(UniAnimationPlaybackEvent * _Nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





@interface UniAnimationImpl (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)cancel;
- (void)finish;
- (void)pause;
- (void)play;
@end


SWIFT_PROTOCOL_NAMED("UniAnimationJSExport")
@protocol UniAnimationJSExport <JSExport>
@property (nonatomic, strong) JSValue * _Nullable onfinish;
@property (nonatomic, strong) JSValue * _Nullable oncancel;
- (void)cancel;
- (void)finish;
- (void)pause;
- (void)play;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniAnimationJSExportImpl")
@interface UniAnimationJSExportImpl : NSObject <UniAnimationJSExport>
@property (nonatomic, strong) JSValue * _Nullable onfinish;
@property (nonatomic, strong) JSValue * _Nullable oncancel;
- (void)cancel;
- (void)finish;
- (void)pause;
- (void)play;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime8UniEvent")
@interface UniEvent : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime25UniAnimationPlaybackEvent")
@interface UniAnimationPlaybackEvent : UniEvent
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime6UniApp_")
@protocol UniApp <JSExport>
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime11UniAppEvent")
@interface UniAppEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime16UniAppErrorEvent")
@interface UniAppErrorEvent : UniAppEvent
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime10UniAppImpl")
@interface UniAppImpl : NSObject <UniApp>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniAppOnNewIntentEvent")
@interface UniAppOnNewIntentEvent : UniAppEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniAppRootAppDelegate")
@interface UniAppRootAppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)application continueUserActivity:(NSUserActivity * _Nonnull)userActivity restorationHandler:(void (^ _Nonnull)(NSArray<id <UIUserActivityRestoring>> * _Nullable))restorationHandler SWIFT_WARN_UNUSED_RESULT;
- (UIInterfaceOrientationMask)application:(UIApplication * _Nonnull)application supportedInterfaceOrientationsForWindow:(UIWindow * _Nullable)window SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol UIViewControllerTransitionCoordinator;
@class NSBundle;

SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniAppRootViewController")
@interface UniAppRootViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) BOOL prefersHomeIndicatorAutoHidden;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime19UniAppSplashManager")
@interface UniAppSplashManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)show;
+ (void)hide;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniAppThemeChangeEvent")
@interface UniAppThemeChangeEvent : UniAppEvent
@end

@class UITraitCollection;
@class UIWindowScene;

SWIFT_CLASS("_TtC19DCloudUniappRuntime12UniAppWindow")
@interface UniAppWindow : UIWindow
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UniCSSStyleDeclaration;
@class UniEventCallbackWrapper;

/// UVUE DOM 元素对象，描述了 UVUE DOM 元素所普通具有的属性和方法。
/// @package io.dcloud.uniapp.runtime
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime10UniElement_")
@protocol UniElement
/// <ul>
///   <li>
///     只读属性 获取当前元素的的 class 属性的动态集合。
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull classList;
/// <ul>
///   <li>
///     只读属性 获取当前元素的的第一个子元素，如果元素是无子元素，则返回 null。
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable firstChild;
/// <ul>
///   <li>
///     只读属性 获取当前元素的最后一个子元素，如果没有子元素，则返回 null。
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable lastChild;
/// <ul>
///   <li>
///     只读属性 获取当前元素在 DOM 树中的父元素，如果没有父元素（如未添加到DOM树中），则返回null。
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable parentNode;
/// <ul>
///   <li>
///     只读属性 获取当前元素在 DOM 树中的父元素，如果没有父元素（如未添加到DOM树中），则返回null。
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable parentElement;
/// <ul>
///   <li>
///     只读属性 获取当前元素的前一个同级元素，没有则返回null。
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable previousSibling;
/// <ul>
///   <li>
///     只读属性 获取在 DOM 树中紧跟在其后面的同级元素，如果指定的元素为最后一个元素，则返回 null。
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable nextSibling;
/// <ul>
///   <li>
///     只读属性 获取在 DOM 树中紧跟在其后面的同级元素，如果指定的元素为最后一个元素，则返回 null。
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniElement> _Nullable nextElementSibling;
/// <ul>
///   <li>
///     只读属性 获取当前元素包含的子元素的集合
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSArray<id <UniElement>> * _Nonnull children;
/// <ul>
///   <li>
///     只读属性 获取当前节点包含的子节点的集合
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSArray<id <UniElement>> * _Nonnull childNodes;
/// <ul>
///   <li>
///     只读属性 获取当前元素的标签名
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSString * _Nonnull tagName;
/// <ul>
///   <li>
///     只读属性 获取当前元素的元素名称
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSString * _Nullable nodeName;
/// <ul>
///   <li>
///     只读属性 获取元素上自定义数据属性（data-*）的集合
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dataset;
/// <ul>
///   <li>
///     只读属性 获取元素上所有属性元素的集合
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// <ul>
///   <li>
///     只读属性 获取元素的CSS样式对象
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) UniCSSStyleDeclaration * _Nonnull style;
/// <ul>
///   <li>
///     只读属性 获取可滚动元素内容的总宽度，仅scroll-view、list-view组件支持，其他组件返回视图宽度
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull scrollWidth;
/// <ul>
///   <li>
///     只读属性 获取可滚动元素内容的总高度，仅scroll-view、list-view组件支持，其他组件返回视图高度
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull scrollHeight;
/// <ul>
///   <li>
///     获取或修改元素滚动条到元素左边的距离像素数，仅scroll-view、list-view组件支持。其他组件返回0
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull scrollLeft;
/// <ul>
///   <li>
///     获取或修改元素滚动条到元素顶部的距离像素数，仅scroll-view、list-view组件支持。其他组件返回0
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull scrollTop;
/// <ul>
///   <li>
///     只读属性 元素的左边界偏移值 单位px
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetLeft;
/// <ul>
///   <li>
///     只读属性 元素的顶部边界偏移值 单位px
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetTop;
/// <ul>
///   <li>
///     只读属性 元素的布局宽度，宽度包含border、padding的数据值 单位px
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetWidth;
/// <ul>
///   <li>
///     只读属性 元素的布局高度，高度包含border、padding的数据值 单位px
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetHeight;
/// <ul>
///   <li>
///     只读属性 扩展属性
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull ext;
/// <ul>
///   <li>
///     获取元素标识。
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
- (NSString * _Nonnull)getNodeId SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     对当前组件进行截图，调用此方法会将当前组件（包含子节点）渲染结果导出成图片。
///   </li>
///   <li>
///     成功会返回图片对应的临时文件路径，目前默认png格式
///   </li>
///   <li>
///   </li>
///   <li>
///     @param options 组件截图的参数对象
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "3.93"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
- (void)takeSnapshot:(TakeSnapshotOptions * _Nonnull)options;
/// <ul>
///   <li>
///     将一个元素添加到指定父元素的子元素列表的末尾处。如果将被插入的元素已经存在于当前文档的文档树中，那么将会它从原先的位置移动到新的位置。
///   </li>
///   <li>
///     @param {UniElement} aChild 插入子元素对象
///   </li>
/// </ul>
- (void)appendChild:(id <UniElement> _Nonnull)aChild;
/// <ul>
///   <li>
///     在参考元素之前插入一个拥有指定父元素的子元素。如果给定的子元素是对文档中现有元素的引用，insertBefore() 会将其从当前位置移动到新位置。
///   </li>
///   <li>
///     @param newChild 插入子元素对象
///   </li>
///   <li>
///     @param refChild 已存在父元素的子元素对象
///   </li>
/// </ul>
- (id <UniElement> _Nullable)insertBefore:(id <UniElement> _Nonnull)newChild :(id <UniElement> _Nullable)refChild SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     将一个元素添加到指定父元素的子元素列表的末尾处 功能等同于appendChild
///   </li>
///   <li>
///     @param newChild 插入子元素对象
///   </li>
/// </ul>
- (id <UniElement> _Nullable)insertBefore:(id <UniElement> _Nonnull)newChild SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     设置指定元素上的某个属性值。如果设置的属性已经存在，则更新该属性值；否则使用指定的名称和值添加一个新的属性。
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
///   <li>
///     @param {string} value 属性值域
///   </li>
/// </ul>
- (void)setAttribute:(NSString * _Nonnull)key :(NSString * _Nonnull)value;
/// <ul>
///   <li>
///     设置指定元素上的某个属性值。功能等同setAttribute value支持任意类型
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
///   <li>
///     @param {string} value 属性值域
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
- (void)setAnyAttribute:(NSString * _Nonnull)key :(id _Nonnull)value;
/// <ul>
///   <li>
///     获取元素指定的属性值，如果指定的属性不存在则返回null。
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
/// </ul>
- (NSString * _Nullable)getAttribute:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     返回元素上一个指定的属性值。如果指定的属性不存在，则返回 null
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
- (id _Nullable)getAnyAttribute:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     返回改元素是否包含有指定的属性，属性存在则返回true，否则返回false。
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
/// </ul>
- (BOOL)hasAttribute:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     从元素中删除一个属性，如果指定的属性不存在，则不做任何操作，也不会产生错误。
///   </li>
///   <li>
///     @param {string} key 属性名称
///   </li>
/// </ul>
- (void)removeAttribute:(NSString * _Nonnull)key;
/// <ul>
///   <li>
///     更新元素的样式。
///   </li>
///   <li>
///     @autodoc false
///   </li>
/// </ul>
- (void)updateStyle:(NSDictionary<NSString *, id> * _Nonnull)map;
/// <ul>
///   <li>
///     获取元素的大小及其相对于窗口的位置信息。
///   </li>
/// </ul>
- (DOMRect * _Nonnull)getBoundingClientRect SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     获取组件的绘制对象，仅uvue页面中的 view 组件支持，其它组件不支持则返回null。
///   </li>
/// </ul>
- (id <DrawableContext> _Nullable)getDrawableContext SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     将指定的监听器注册到元素对象上，当该对象触发指定的事件时，指定的回调函数就会被执行。
///   </li>
///   <li>
///     @param {string} type 事件类型
///   </li>
///   <li>
///     @param {(event: T) => R} callback 事件监听器 T表示event类型，R表示返回值类型
///   </li>
/// </ul>
- (UniEventCallbackWrapper * _Nonnull)addEventListener:(NSString * _Nonnull)type :(id _Nullable (^ _Nonnull)(UniEvent * _Nonnull))callback SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     删除使用 addEventListener 方法添加的事件监听器。
///   </li>
///   <li>
///     @param type 事件类型
///   </li>
///   <li>
///     @param callbackWrapper 事件监听回调封装类
///   </li>
/// </ul>
- (void)removeEventListener:(NSString * _Nonnull)type :(UniEventCallbackWrapper * _Nonnull)callbackWrapper;
/// <ul>
///   <li>
///     从元素中删除一个子元素，返回删除的元素。
///   </li>
///   <li>
///     @param {UniElement} aChild 被删除子元素对象
///   </li>
/// </ul>
- (id <UniElement> _Nullable)removeChild:(id <UniElement> _Nonnull)aChild SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     把元素对象从它所属的 DOM 树中删除。
///   </li>
/// </ul>
- (void)remove;
/// <ul>
///   <li>
///     向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。
///   </li>
///   <li>
///     @param {string} type 事件类型
///   </li>
///   <li>
///     @param {Event} value 事件返回对象
///   </li>
/// </ul>
- (void)dispatchEvent:(NSString * _Nonnull)type :(UniEvent * _Nonnull)value;
/// <ul>
///   <li>
///     向一个指定的事件目标派发一个 Event，并以合适的顺序（同步地）调用此事件的监听器回调函数。
///   </li>
///   <li>
///     @param {UniEvent} value 事件返回对象
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.25"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "12.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.25"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
- (void)dispatchEvent:(UniEvent * _Nonnull)value;
/// <ul>
///   <li>
///     使界面滚动到给定元素的指定坐标位置 仅scroll-view、list-view组件支持
///   </li>
///   <li>
///     @param {number} x x轴要滚动到坐标位置(单位px)
///   </li>
///   <li>
///     @param {number} y y轴要滚动到坐标位置(单位px)
///   </li>
/// </ul>
- (void)scrollTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// <ul>
///   <li>
///     使得元素滚动一段特定距离 仅scroll-view、list-view组件支持
///   </li>
///   <li>
///     @param {number} x x轴要滚动的距离(单位px)
///   </li>
///   <li>
///     @param {number} y y轴要滚动的距离(单位px)
///   </li>
/// </ul>
- (void)scrollBy:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// <ul>
///   <li>
///     返回文档中与指定选择器或选择器组匹配的第一个 Element对象。如果找不到匹配项，则返回null
///   </li>
///   <li>
///     @param {string.cssSelectorString}selector CSS 选择器字符串
///   </li>
/// </ul>
- (id <UniElement> _Nullable)querySelector:(NSString * _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     返回与指定的选择器组匹配的文档中的元素列表
///   </li>
///   <li>
///     @param {string.cssSelectorString}selector CSS 选择器字符串
///   </li>
/// </ul>
- (NSArray<id <UniElement>> * _Nullable)querySelectorAll:(NSString * _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     使元素获取焦点 仅input、Textarea组件支持
///   </li>
/// </ul>
- (void)focus;
/// <ul>
///   <li>
///     使元素丢失焦点 仅input、Textarea组件支持
///   </li>
/// </ul>
- (void)blur;
/// <ul>
///   <li>
///     获取 element 组件实例的原生 view
///   </li>
/// </ul>
- (UIView * _Nullable)getIOSView SWIFT_WARN_UNUSED_RESULT;
/// 获取 element 对应的页面对象
- (id <UniPage> _Nullable)getPage SWIFT_WARN_UNUSED_RESULT;
- (id <UniAnimation> _Nullable)animate:(id _Nonnull)keyframes :(UTSJSONObject * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
/// 只读属性 element 对应的页面对象
@property (nonatomic, readonly, strong) id <UniPage> _Nonnull uniPage;
@end


/// text元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime14UniTextElement_")
@protocol UniTextElement <UniElement>
/// <ul>
///   <li>
///     只读属性 text元素的文案内容
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@end


/// button元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime16UniButtonElement_")
@protocol UniButtonElement <UniTextElement, JSExport>
/// <ul>
///   <li>
///     点击button
///   </li>
/// </ul>
- (void)click;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniCSSStyleDeclaration")
@interface UniCSSStyleDeclaration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime12UniComponent")
@interface UniComponent : DCUniComponent
@property (nonatomic, readonly, strong) UIView * _Nullable rootView;
- (void)setNeedsLayout;
- (nonnull instancetype)initWithRef:(NSString * _Nonnull)ref type:(NSString * _Nonnull)type styles:(NSDictionary * _Nonnull)styles attributes:(NSDictionary * _Nonnull)attributes events:(NSArray * _Nonnull)events SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface UniComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)_updatePseudoClassStyles:(NSDictionary<NSString *, id> * _Nonnull)styles isRecovery:(BOOL)isRecovery;
@end



@interface UniComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)_performBlockOnComponentThread:(void (^ _Nonnull)(void))block;
- (void)_addUITask:(void (^ _Nonnull)(void))block;
- (void)fireEvent:(NSString * _Nonnull)eventName params:(NSDictionary<NSString *, id> * _Nullable)params;
- (float)_getBorderDefaultHeight SWIFT_WARN_UNUSED_RESULT;
- (void)_unloadViewWithReusing:(BOOL)isReusing;
@end

@class UniTouchGestureRecognizer;

@interface UniComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)onClickEvent:(NSDictionary * _Nonnull)data;
- (void)onTouchEvent:(NSString * _Nonnull)name data:(NSDictionary<NSString *, id> * _Nonnull)data gestureRecognizer:(UniTouchGestureRecognizer * _Nullable)gestureRecognizer;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime10UniConsole")
@interface UniConsole : NSObject <Console>
+ (void)debug;
+ (void)info;
+ (void)error;
+ (void)warn;
+ (void)log;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS_NAMED("UniCssParser")
@interface UTSSDKModulesUniCssParserUniCssParser : NSObject
- (UTSSourceMapPosition * _Nullable)__$getOriginalPosition SWIFT_WARN_UNUSED_RESULT;
+ (UTSSDKModulesUniCssParserTextShadowResult * _Nullable)parseTextShadow:(NSString * _Nonnull)textShadow SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UniCssParserByJs")
@interface UTSSDKModulesUniCssParserUniCssParserByJs : UTSSDKModulesUniCssParserUniCssParser
+ (UTSSDKModulesUniCssParserTextShadowResult * _Nullable)parseTextShadowByJs:(NSString * _Nonnull)textShadow SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime16UniCustomElement_")
@protocol UniCustomElement <UniElement>
@optional
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable _observedAttributes;
/// 当元素被插入到文档时调用
- (void)connectedCallback;
/// 当元素从文档中删除时调用
- (void)disconnectedCallback;
/// 当元素的属性被添加、移除或更改时调用
- (void)attributeChangedCallback:(NSString * _Nonnull)name :(NSString * _Nonnull)oldValue :(NSString * _Nonnull)newValue;
@end

@protocol UniPageBody;
@protocol UniSafeAreaInsets;

SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime7UniPage_")
@protocol UniPage <JSExport>
- (nonnull instancetype)init;
/// 标记页面类型
@property (nonatomic, copy) NSString * _Nonnull __nativeType;
/// 绑定的 nativePage id
@property (nonatomic, copy) NSString * _Nonnull __nativePageId;
/// 页面的路由地址
@property (nonatomic, copy) NSString * _Nonnull route;
/// 页面的路由参数信息
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull optionsByJS;
@property (nonatomic, strong) UTSJSONObject * _Nonnull options;
/// <ul>
///   <li>
///     页面body位置信息
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniPageBody> _Nonnull pageBody;
/// <ul>
///   <li>
///     页面安全区域插入位置
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) id <UniSafeAreaInsets> _Nonnull safeAreaInsets;
/// <ul>
///   <li>
///     页面窗口宽度(屏幕宽度)
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
/// <ul>
///   <li>
///     页面窗口高度(屏幕高度)
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
/// <ul>
///   <li>
///     当前页面显示的状态栏高度
///   </li>
/// </ul>
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusBarHeight;
/// 获取所属父页面
- (id <UniPage> _Nullable)getParentPage SWIFT_WARN_UNUSED_RESULT;
- (id <UniPage> _Nullable)getParentPageByJS SWIFT_WARN_UNUSED_RESULT;
/// 获取当前页面的 dialog 子页面集合
- (NSArray<id <UniPage>> * _Nonnull)getDialogPages SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <UniPage>> * _Nonnull)getDialogPages:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
/// 获取当前页面样式
- (UTSJSONObject * _Nonnull)getPageStyle SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)getPageStyleByJS SWIFT_WARN_UNUSED_RESULT;
/// 设置当前页面样式
- (void)setPageStyle:(UTSJSONObject * _Nonnull)style;
- (void)setPageStyleByJS:(NSDictionary<NSString *, id> * _Nonnull)style;
/// 返回一个匹配特定 ID 的元素， 如果不存在，返回 null。<br/>
/// 如果需要获取指定的节点类型，需要使用 as 进行类型转换。<br/>
/// ID 区分大小写，且应该是唯一的。如果存在多个匹配的元素，则返回第一个匹配的元素。
- (id <UniElement> _Nullable)getElementById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
/// 返回 iOS 平台页面根 view
- (UIView * _Nullable)getIOSView SWIFT_WARN_UNUSED_RESULT;
/// 关闭页面
- (void)close:(NSDictionary<NSString *, id> * _Nonnull)options;
/// 退出全屏
- (void)exitFullscreen:(ExitFullscreenOptions * _Nullable)options;
/// 创建一个元素
- (id <UniElement> _Nonnull)createElement:(NSString * _Nonnull)tagName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime13UniDialogPage_")
@protocol UniDialogPage <UniPage>
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime11UniPageImpl")
@interface UniPageImpl : NSObject <UniPage>
@property (nonatomic, copy) NSString * _Nonnull __nativeType;
@property (nonatomic, copy) NSString * _Nonnull __nativePageId;
@property (nonatomic, copy) NSString * _Nonnull route;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull optionsByJS;
@property (nonatomic, strong) UTSJSONObject * _Nonnull options;
@property (nonatomic, readonly, strong) id <UniPageBody> _Nonnull pageBody;
@property (nonatomic, readonly, strong) id <UniSafeAreaInsets> _Nonnull safeAreaInsets;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusBarHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSArray<id <UniPage>> * _Nonnull)getDialogPages SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <UniPage>> * _Nonnull)getDialogPages:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (id <UniPage> _Nullable)getParentPage SWIFT_WARN_UNUSED_RESULT;
- (id <UniPage> _Nullable)getParentPageByJS SWIFT_WARN_UNUSED_RESULT;
- (UTSJSONObject * _Nonnull)getPageStyle SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)getPageStyleByJS SWIFT_WARN_UNUSED_RESULT;
- (void)setPageStyle:(UTSJSONObject * _Nonnull)style;
- (void)setPageStyleByJS:(NSDictionary<NSString *, id> * _Nonnull)style;
- (id <UniElement> _Nullable)getElementById:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)getIOSView SWIFT_WARN_UNUSED_RESULT;
- (void)close:(NSDictionary<NSString *, id> * _Nonnull)options;
- (void)exitFullscreen:(ExitFullscreenOptions * _Nullable)options;
- (id <UniElement> _Nonnull)createElement:(NSString * _Nonnull)tagName SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniDialogPageImpl")
@interface UniDialogPageImpl : UniPageImpl <UniDialogPage>
- (NSArray<id <UniPage>> * _Nonnull)getDialogPages:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (void)close:(NSDictionary<NSString *, id> * _Nonnull)options;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UniDrawable")
@interface UniDrawable : NSObject <DrawableContext>
@property (nonatomic, copy) NSString * _Nullable fillStyle;
@property (nonatomic) id _Nonnull font;
@property (nonatomic, copy) NSString * _Nullable lineCap;
@property (nonatomic, strong) NSNumber * _Nonnull lineDashOffset;
@property (nonatomic, copy) NSString * _Nullable lineJoin;
@property (nonatomic) id _Nonnull lineWidth;
@property (nonatomic, copy) NSString * _Nullable strokeStyle;
@property (nonatomic, copy) NSString * _Nullable textAlign;
- (void)reset;
- (void)update;
- (void)beginPath;
- (void)moveTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (void)lineTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (void)arc:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)radius :(NSNumber * _Nonnull)startAngle :(NSNumber * _Nonnull)endAngle;
- (void)arc:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)radius :(NSNumber * _Nonnull)startAngle :(NSNumber * _Nonnull)endAngle :(BOOL)counterclockwise;
- (void)arcTo:(NSNumber * _Nonnull)x1 :(NSNumber * _Nonnull)y1 :(NSNumber * _Nonnull)x2 :(NSNumber * _Nonnull)y2 :(NSNumber * _Nonnull)radius;
- (void)closePath;
- (void)fill;
- (void)fill:(NSString * _Nonnull)fillRule;
- (void)fillRect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
- (void)fillText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (void)fillText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)maxWidth;
- (void)strokeText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (void)strokeText:(NSString * _Nonnull)text :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)maxWidth;
- (void)rect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
- (void)setLineDash:(NSArray<NSNumber *> * _Nonnull)lengths;
- (void)stroke;
- (void)strokeRect:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y :(NSNumber * _Nonnull)width :(NSNumber * _Nonnull)height;
- (void)bezierCurveTo:(NSNumber * _Nonnull)x1 :(NSNumber * _Nonnull)y1 :(NSNumber * _Nonnull)x2 :(NSNumber * _Nonnull)y2 :(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime16UniEditComponent")
@interface UniEditComponent : UniComponent
@property (nonatomic) BOOL holdKeyboard;
- (void)viewWillLoad;
- (void)viewWillUnload;
- (void)viewDidLoad;
- (id _Nullable)getAttr:(NSString * _Nonnull)attribute SWIFT_WARN_UNUSED_RESULT;
- (void)layoutDidFinish;
- (void)_frameDidCalculated:(BOOL)isChanged;
- (void)updateStyles:(NSDictionary<NSString *, id> * _Nonnull)styles;
- (void)updateAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
@end





@interface UniEditComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)addEvent:(NSString * _Nonnull)eventName;
- (void)removeEvent:(NSString * _Nonnull)eventName;
@end



SWIFT_CLASS_NAMED("UniElementFlexNode")
@interface UniElementFlexNode : UniLayoutFlexNode <UniLayoutFlexMeasureDelegate>
- (nonnull instancetype)initWithLevel:(UniCSSNodeLevel)level withRootNode:(UniLayoutFlexNode * _Nullable)rootNode OBJC_DESIGNATED_INITIALIZER;
- (CGSize)onSizeMeasureFuncWidth:(float)width mode:(int32_t)widthMode height:(float)height mode:(int32_t)heightMode SWIFT_WARN_UNUSED_RESULT;
- (float)getContentSizeWidth SWIFT_WARN_UNUSED_RESULT;
- (float)getContentSizeHeight SWIFT_WARN_UNUSED_RESULT;
- (void)setStyleWidth:(float)styleWidth SWIFT_DEPRECATED_MSG("此方法已过期，请使用setStyleWidth(_ styleWidth : UniFlexValue) 替代");
/// /
/// /    open override func setStyleHeightPercent(_ percent: Float) {
/// /        self.styleHeight = UniFlexValue.percent( percent)
/// /        super.setStyleHeightPercent(percent)
/// /    }
/// /
- (void)setStyleHeight:(float)styleHeight SWIFT_DEPRECATED_MSG("此方法已过期，请使用setStyleHeight(_ styleHeight : UniFlexValue) 替代");
- (void)setPositionEdge:(UniCssFlexEdge)edge value:(float)value SWIFT_DEPRECATED_MSG("此方法已过期，请使用setStylePosition(_ position: UniFlexValue, withEdge: UniCssFlexEdge) 替代");
- (void)uni_reset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("UniElementPropsNode")
@interface UniElementPropsNode : UniElementFlexNode
- (void)destory;
- (nonnull instancetype)initWithLevel:(UniCSSNodeLevel)level withRootNode:(UniLayoutFlexNode * _Nullable)rootNode SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("UniElementImpl")
@interface UniElementImpl : UniElementPropsNode <UniElement>
@property (nonatomic, strong) id <JSExport> _Nullable customElementJSExport;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull tagType;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
@property (nonatomic, strong) UniCSSStyleDeclaration * _Nonnull style;
@property (nonatomic, strong) UniComponent * _Nullable component;
@property (nonatomic) BOOL isLayout;
/// size变化回调
@property (nonatomic, copy) void (^ _Nullable onResize)(void);
- (void)__initCustomElement;
- (void)destory;
- (void)create;
- (void)appendChild:(id <UniElement> _Nonnull)child;
- (id <UniElement> _Nullable)insertBefore:(id <UniElement> _Nonnull)child SWIFT_WARN_UNUSED_RESULT;
- (id <UniElement> _Nullable)insertBefore:(id <UniElement> _Nonnull)child :(id <UniElement> _Nullable)anchor SWIFT_WARN_UNUSED_RESULT;
- (id <UniElement> _Nullable)removeChild:(id <UniElement> _Nonnull)child SWIFT_WARN_UNUSED_RESULT;
- (id <UniElement> _Nonnull)cloneNode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)contains:(id <UniElement> _Nonnull)otherNode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasChildNodes SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqualNode:(id <UniElement> _Nonnull)otherNode SWIFT_WARN_UNUSED_RESULT;
- (id <UniElement> _Nullable)replaceChild:(id <UniElement> _Nonnull)newChild :(id <UniElement> _Nonnull)oldChild SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getAttribute:(NSString * _Nonnull)attributeName SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nonnull)getAttributeNames SWIFT_WARN_UNUSED_RESULT;
- (DOMRect * _Nonnull)getBoundingClientRect SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasAttribute:(NSString * _Nonnull)attName SWIFT_WARN_UNUSED_RESULT;
- (void)removeAttribute:(NSString * _Nonnull)attrName;
- (UniEventCallbackWrapper * _Nonnull)addEventListener:(NSString * _Nonnull)type :(id _Nullable (^ _Nonnull)(UniEvent * _Nonnull))callback;
- (void)removeEventListener:(NSString * _Nonnull)type :(UniEventCallbackWrapper * _Nonnull)callbackWrapper;
- (void)dispatchEvent:(NSString * _Nonnull)type :(UniEvent * _Nonnull)value;
- (void)dispatchEvent:(UniEvent * _Nonnull)value;
- (UniEventCallbackWrapper * _Nonnull)addTouchEventListener:(NSString * _Nonnull)type :(id _Nullable (^ _Nonnull)(UniEvent * _Nonnull))listener;
- (UniEventCallbackWrapper * _Nonnull)addClickEventListener:(id _Nullable (^ _Nonnull)(UniEvent * _Nonnull))listener;
- (void)removeEventListener:(UniEventCallbackWrapper * _Nonnull)callbackWrapper;
- (void)removeEventListenerWithIdentify:(NSString * _Nonnull)identify;
- (void)setAttribute:(NSString * _Nonnull)key :(NSString * _Nonnull)value;
- (void)blur;
- (void)click;
- (void)focus;
- (void)syncStyle:(NSDictionary<NSString *, id> * _Nonnull)style;
- (void)updateAttrs:(NSDictionary<NSString *, id> * _Nonnull)attrs reuse:(BOOL)reuse;
/// 组件复用时更新属性，其他情况应该使用 updateAttrs
- (void)reuseUpdateAttrs:(NSDictionary<NSString *, id> * _Nonnull)attrs;
- (void)updateStyle:(NSDictionary<NSString *, id> * _Nonnull)style;
/// 用于组件复用时更新样式，其他情况应该使用 updateStyle
- (void)reuseUpdateStyle:(NSDictionary<NSString *, id> * _Nonnull)style;
@property (nonatomic, readonly, copy) NSString * _Nonnull tagName;
@property (nonatomic, readonly, copy) NSString * _Nullable nodeName;
@property (nonatomic, readonly, copy) NSArray<id <UniElement>> * _Nonnull childNodes;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable firstChild;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable lastChild;
@property (nonatomic, readonly) BOOL isConnected;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable parentNode;
@property (nonatomic, readonly) float clientLeft;
@property (nonatomic, readonly) float clientTop;
@property (nonatomic, readonly) float clientWidth;
@property (nonatomic, readonly) float clientHeight;
@property (nonatomic, copy) NSString * _Nullable innerHTML;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable nextElementSibling;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable previousElementSibling;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable previousSibling;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable nextSibling;
- (void)remove;
@property (nonatomic) BOOL lazy;
- (NSString * _Nonnull)getNodeId SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)getAttributeMap SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)getRealAttributeMap SWIFT_WARN_UNUSED_RESULT;
- (void)syncUpdateStyle:(NSDictionary<NSString *, id> * _Nonnull)style;
- (id <UniElement> _Nullable)getChildNodeAt:(NSInteger)position SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getChildCount SWIFT_WARN_UNUSED_RESULT;
- (float)getWidth SWIFT_WARN_UNUSED_RESULT;
- (float)getHeight SWIFT_WARN_UNUSED_RESULT;
- (float)getX SWIFT_WARN_UNUSED_RESULT;
- (float)getY SWIFT_WARN_UNUSED_RESULT;
- (id <DrawableContext> _Nullable)getDrawableContext SWIFT_WARN_UNUSED_RESULT;
- (void)setNeedLayout;
- (void)layoutBefore;
- (void)layoutAfter;
- (void)dirty;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull classList;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull ext;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull dataset;
@property (nonatomic, readonly, strong) id <UniElement> _Nullable parentElement;
@property (nonatomic, readonly, copy) NSArray<id <UniElement>> * _Nonnull children;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull scrollWidth;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull scrollHeight;
@property (nonatomic, strong) NSNumber * _Nonnull scrollLeft;
@property (nonatomic, strong) NSNumber * _Nonnull scrollTop;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetLeft;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetTop;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetWidth;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull offsetHeight;
- (void)setAnyAttribute:(NSString * _Nonnull)key :(id _Nonnull)value;
- (id _Nullable)getAnyAttribute:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)scrollTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (void)scrollBy:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
- (id <UniElement> _Nullable)querySelector:(NSString * _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (NSArray<id <UniElement>> * _Nullable)querySelectorAll:(NSString * _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
- (void)takeSnapshot:(TakeSnapshotOptions * _Nonnull)options;
- (UIView * _Nullable)getIOSView SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id <UniPage> _Nonnull uniPage;
- (id <UniPage> _Nullable)getPage SWIFT_WARN_UNUSED_RESULT;
- (id <UniAnimation> _Nullable)animate:(id _Nonnull)keyframes :(UTSJSONObject * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS("_TtC19DCloudUniappRuntime23UniEventCallbackWrapper")
@interface UniEventCallbackWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// <code>IQAutoToolbarBySubviews</code>
/// Creates Toolbar according to subview’s hierarchy of Textfield’s in view.
/// <code>IQAutoToolbarByTag</code>
/// Creates Toolbar according to tag property of TextField’s.
/// <code>IQAutoToolbarByPosition</code>
/// Creates Toolbar according to the y,x position of textField in it’s superview coordinate.
typedef SWIFT_ENUM(NSInteger, UniIQAutoToolbarManageBehavior, open) {
  UniIQAutoToolbarManageBehaviorBySubviews = 0,
  UniIQAutoToolbarManageBehaviorByTag = 1,
  UniIQAutoToolbarManageBehaviorByPosition = 2,
};

@class UniIQInvocation;

SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniIQBarButtonItem") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQBarButtonItem : UIBarButtonItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// Additional target & action to do get callback action.
/// Note that setting custom target & selector doesn’t affect native functionality,
/// this is just an additional target to get a callback.
/// @param target Target object.
/// @param action Target Selector.
- (void)setTarget:(id _Nullable)target action:(SEL _Nullable)action;
/// Customized Invocation to be called when button is pressed.
/// invocation is internally created using setTarget:action: method.
@property (nonatomic, strong) UniIQInvocation * _Nullable invocation;
@end


/// UniIQBarButtonItemConfiguration for creating toolbar with bar button items
SWIFT_CLASS("_TtC19DCloudUniappRuntime31UniIQBarButtonItemConfiguration") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQBarButtonItemConfiguration : NSObject
- (nonnull instancetype)initWithSystemItem:(UIBarButtonSystemItem)systemItem action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nonnull)image action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title action:(SEL _Nullable)action OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic) SEL _Nullable action;
@property (nonatomic, copy) NSString * _Nullable accessibilityLabel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// <code>IQEnableModeDefault</code>
/// Pick default settings.
/// <code>IQEnableModeEnabled</code>
/// setting is enabled.
/// <code>IQEnableModeDisabled</code>
/// setting is disabled.
typedef SWIFT_ENUM(NSInteger, UniIQEnableMode, open) {
  UniIQEnableModeDefault = 0,
  UniIQEnableModeEnabled = 1,
  UniIQEnableModeDisabled = 2,
};


SWIFT_CLASS("_TtC19DCloudUniappRuntime15UniIQInvocation") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQInvocation : NSObject
@property (nonatomic, weak) id _Nullable target;
@property (nonatomic) SEL _Nonnull action;
- (nonnull instancetype)init:(id _Nonnull)target :(SEL _Nonnull)action OBJC_DESIGNATED_INITIALIZER;
- (void)invokeFrom:(id _Nonnull)from;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol UITextFieldDelegate;
@protocol UITextViewDelegate;

/// Manages the return key to work like next/done in a view hierarchy.
SWIFT_CLASS("_TtC19DCloudUniappRuntime29UniIQKeyboardReturnKeyHandler") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQKeyboardReturnKeyHandler : NSObject
/// Delegate of textField/textView.
@property (nonatomic, weak) id <UITextFieldDelegate, UITextViewDelegate> _Nullable delegate;
/// Set the last textfield return key type. Default is UIReturnKeyDefault.
@property (nonatomic) UIReturnKeyType lastTextFieldReturnKeyType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Add all the textFields available in UIViewController’s view.
- (nonnull instancetype)initWithController:(UIViewController * _Nonnull)controller OBJC_DESIGNATED_INITIALIZER;
/// Should pass UITextField/UITextView instance. Assign textFieldView delegate to self, change it’s returnKeyType.
/// @param view UITextField/UITextView object to register.
- (void)addTextFieldView:(UIView * _Nonnull)view;
/// Should pass UITextField/UITextView instance. Restore it’s textFieldView delegate and it’s returnKeyType.
/// @param view UITextField/UITextView object to unregister.
- (void)removeTextFieldView:(UIView * _Nonnull)view;
/// Add all the UITextField/UITextView responderView’s.
/// @param view UIView object to register all it’s responder subviews.
- (void)addResponderFromView:(UIView * _Nonnull)view;
/// Remove all the UITextField/UITextView responderView’s.
/// @param view UIView object to unregister all it’s responder subviews.
- (void)removeResponderFromView:(UIView * _Nonnull)view;
@end

@class UITextView;
@class UIMenuElement;
@class UIMenu;
@protocol UIEditMenuInteractionAnimating;

SWIFT_AVAILABILITY(ios_app_extension,unavailable) SWIFT_AVAILABILITY(ios,introduced=16.0)
@interface UniIQKeyboardReturnKeyHandler (SWIFT_EXTENSION(DCloudUniappRuntime))
- (UIMenu * _Nullable)textView:(UITextView * _Nonnull)aTextView editMenuForTextInRange:(NSRange)range suggestedActions:(NSArray<UIMenuElement *> * _Nonnull)suggestedActions SWIFT_WARN_UNUSED_RESULT;
- (void)textView:(UITextView * _Nonnull)aTextView willPresentEditMenuWithAnimator:(id <UIEditMenuInteractionAnimating> _Nonnull)animator;
- (void)textView:(UITextView * _Nonnull)aTextView willDismissEditMenuWithAnimator:(id <UIEditMenuInteractionAnimating> _Nonnull)animator;
@end

@class UITextItem;
@class UIAction;
@class UITextItemMenuConfiguration;
@protocol UIContextMenuInteractionAnimating;

SWIFT_AVAILABILITY(ios_app_extension,unavailable) SWIFT_AVAILABILITY(ios,introduced=17.0)
@interface UniIQKeyboardReturnKeyHandler (SWIFT_EXTENSION(DCloudUniappRuntime))
- (UIAction * _Nullable)textView:(UITextView * _Nonnull)aTextView primaryActionForTextItem:(UITextItem * _Nonnull)textItem defaultAction:(UIAction * _Nonnull)defaultAction SWIFT_WARN_UNUSED_RESULT;
- (UITextItemMenuConfiguration * _Nullable)textView:(UITextView * _Nonnull)aTextView menuConfigurationForTextItem:(UITextItem * _Nonnull)textItem defaultMenu:(UIMenu * _Nonnull)defaultMenu SWIFT_WARN_UNUSED_RESULT;
- (void)textView:(UITextView * _Nonnull)textView textItemMenuWillDisplayForTextItem:(UITextItem * _Nonnull)textItem animator:(id <UIContextMenuInteractionAnimating> _Nonnull)animator;
- (void)textView:(UITextView * _Nonnull)textView textItemMenuWillEndForTextItem:(UITextItem * _Nonnull)textItem animator:(id <UIContextMenuInteractionAnimating> _Nonnull)animator;
@end

@class UITextField;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQKeyboardReturnKeyHandler (SWIFT_EXTENSION(DCloudUniappRuntime)) <UITextFieldDelegate>
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField reason:(UITextFieldDidEndEditingReason)reason;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

@class NSTextAttachment;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQKeyboardReturnKeyHandler (SWIFT_EXTENSION(DCloudUniappRuntime)) <UITextViewDelegate>
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=10.0);
- (BOOL)textView:(UITextView * _Nonnull)aTextView shouldInteractWithTextAttachment:(NSTextAttachment * _Nonnull)textAttachment inRange:(NSRange)characterRange SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,deprecated=10.0);
@end

/// <code>IQPreviousNextDisplayModeDefault</code>
/// Show NextPrevious when there are more than 1 textField otherwise hide.
/// <code>IQPreviousNextDisplayModeAlwaysHide</code>
/// Do not show NextPrevious buttons in any case.
/// <code>IQPreviousNextDisplayModeAlwaysShow</code>
/// Always show nextPrevious buttons,
/// if there are more than 1 textField then both buttons will be visible but will be shown as disabled.
typedef SWIFT_ENUM(NSInteger, UniIQPreviousNextDisplayMode, open) {
  UniIQPreviousNextDisplayModeDefault = 0,
  UniIQPreviousNextDisplayModeAlwaysHide = 1,
  UniIQPreviousNextDisplayModeAlwaysShow = 2,
};


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniIQPreviousNextView") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQPreviousNextView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTextContainer;
@class NSAttributedString;
@class UIFont;
@class UITextPosition;

/// @abstract UITextView with placeholder support
SWIFT_CLASS("_TtC19DCloudUniappRuntime13UniIQTextView") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQTextView : UITextView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
/// @abstract To set textView’s placeholder text color.
@property (nonatomic, strong) IBInspectable UIColor * _Nullable placeholderTextColor;
/// @abstract To set textView’s placeholder text. Default is nil.
@property (nonatomic, copy) IBInspectable NSString * _Nullable placeholder;
- (void)layoutSubviews;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic, strong) UIFont * _Nullable font;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, weak) id <UITextViewDelegate> _Nullable delegate;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGRect)caretRectForPosition:(UITextPosition * _Nonnull)position SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime23UniIQTitleBarButtonItem") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQTitleBarButtonItem : UniIQBarButtonItem
@property (nonatomic, strong) UIFont * _Nullable titleFont;
@property (nonatomic, copy) NSString * _Nullable title;
/// titleColor to be used for displaying button text when displaying title (disabled state).
@property (nonatomic, strong) UIColor * _Nullable titleColor;
/// selectableTitleColor to be used for displaying button text when button is enabled.
@property (nonatomic, strong) UIColor * _Nullable selectableTitleColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// @abstract   UniIQToolbar for UniKeyboardManager.
SWIFT_CLASS("_TtC19DCloudUniappRuntime12UniIQToolbar") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQToolbar : UIToolbar <UIInputViewAudioFeedback>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UniIQBarButtonItem * _Nonnull previousBarButton;
@property (nonatomic, strong) UniIQBarButtonItem * _Nonnull nextBarButton;
@property (nonatomic, strong) UniIQTitleBarButtonItem * _Nonnull titleBarButton;
@property (nonatomic, strong) UniIQBarButtonItem * _Nonnull doneBarButton;
@property (nonatomic, strong) UniIQBarButtonItem * _Nonnull fixedSpaceBarButton;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@property (nonatomic, readonly) BOOL enableInputClicksWhenVisible;
@end

@class UniIQToolbarPlaceholderConfiguration;

SWIFT_CLASS("_TtC19DCloudUniappRuntime25UniIQToolbarConfiguration") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQToolbarConfiguration : NSObject
/// If YES, then uses textField’s tintColor property for UniIQToolbar, otherwise tint color is default. Default is NO.
@property (nonatomic) BOOL useTextFieldTintColor;
/// This is used for toolbar.tintColor when textfield.keyboardAppearance is UIKeyboardAppearanceDefault.
/// If useTextFieldTintColor is YES then this property is ignored. Default is nil and uses black color.
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// This is used for toolbar.barTintColor. Default is nil.
@property (nonatomic, strong) UIColor * _Nullable barTintColor;
/// UniIQPreviousNextDisplayModeDefault:      Show NextPrevious when there are more than 1 textField otherwise hide.
/// UniIQPreviousNextDisplayModeAlwaysHide:   Do not show NextPrevious buttons in any case.
/// UniIQPreviousNextDisplayModeAlwaysShow:   Always show nextPrevious buttons,
/// if there are more than 1 textField then both buttons will be visible but will be shown as disabled.
@property (nonatomic) enum UniIQPreviousNextDisplayMode previousNextDisplayMode;
/// /**
/// IQAutoToolbarBySubviews:   Creates Toolbar according to subview’s hierarchy of Textfield’s in view.
/// IQAutoToolbarByTag:        Creates Toolbar according to tag property of TextField’s.
/// IQAutoToolbarByPosition:   Creates Toolbar according to the y,x position
/// of textField in it’s superview coordinate.
/// Default is IQAutoToolbarBySubviews.
/// */
/// AutoToolbar managing behavior. Default is IQAutoToolbarBySubviews.
@property (nonatomic) enum UniIQAutoToolbarManageBehavior manageBehavior;
/// Buttons configuration displayed on the toolbar, the selector parameter is ignored in below configuration
@property (nonatomic, strong) UniIQBarButtonItemConfiguration * _Nullable previousBarButtonConfiguration;
@property (nonatomic, strong) UniIQBarButtonItemConfiguration * _Nullable nextBarButtonConfiguration;
@property (nonatomic, strong) UniIQBarButtonItemConfiguration * _Nullable doneBarButtonConfiguration;
@property (nonatomic, readonly, strong) UniIQToolbarPlaceholderConfiguration * _Nonnull placeholderConfiguration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime36UniIQToolbarPlaceholderConfiguration") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniIQToolbarPlaceholderConfiguration : NSObject
/// If YES, then it add the textField’s placeholder text on UniIQToolbar. Default is YES.
@property (nonatomic) BOOL showPlaceholder;
/// Placeholder Font. Default is nil.
@property (nonatomic, strong) UIFont * _Nullable font;
/// Placeholder Color. Default is nil. Which means lightGray
@property (nonatomic, strong) UIColor * _Nullable color;
/// Placeholder Button Color when it’s treated as button. Default is nil.
@property (nonatomic, strong) UIColor * _Nullable buttonColor;
/// Placeholder accessibility Label
@property (nonatomic, copy) NSString * _Nullable accessibilityLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniImageComponent")
@interface UniImageComponent : UniComponent
- (void)updateStyles:(NSDictionary<NSString *, id> * _Nonnull)styles;
- (void)updateAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (UIView * _Nonnull)loadView SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
@end


@interface UniImageComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)addEvent:(NSString * _Nonnull)eventName;
- (void)removeEvent:(NSString * _Nonnull)eventName;
@end




@interface UniImageComponent (SWIFT_EXTENSION(DCloudUniappRuntime))
- (BOOL)_needsDrawBorder SWIFT_WARN_UNUSED_RESULT;
- (void)_resetNativeBorderRadius;
- (BOOL)needsDrawRect SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)drawRect:(CGRect)rect SWIFT_WARN_UNUSED_RESULT;
- (void)didFinishDrawingLayer:(BOOL)success;
- (void)viewWillUnload;
- (void)_frameDidCalculated:(BOOL)isChanged;
- (void)layoutDidFinish;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime19UniImageElementImpl")
@interface UniImageElementImpl : UniElementImpl
- (void)initProps SWIFT_METHOD_FAMILY(none);
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniImageErrorEvent")
@interface UniImageErrorEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniImageLoadEvent")
@interface UniImageLoadEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniInputBlurEvent")
@interface UniInputBlurEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime19UniInputChangeEvent")
@interface UniInputChangeEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniInputConfirmEvent")
@interface UniInputConfirmEvent : UniEvent
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime20UniNativeFormControl_")
@protocol UniNativeFormControl <JSExport>
@property (nonatomic, readonly) id _Nullable value;
@end


/// input元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime15UniInputElement_")
@protocol UniInputElement <UniElement, UniNativeFormControl>
/// <ul>
///   <li>
///     表单的控件名称，作为键值对的一部分与表单(form组件)一同提交
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic, copy) NSString * _Nonnull name;
/// <ul>
///   <li>
///     input的类型
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic, copy) NSString * _Nonnull type;
/// <ul>
///   <li>
///     是否禁用
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic) BOOL disabled;
/// <ul>
///   <li>
///     自动获取焦点
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic) BOOL autofocus;
- (void)focus;
- (void)blur;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime13UniInputEvent")
@interface UniInputEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniInputFocusEvent")
@interface UniInputFocusEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime33UniInputKeyboardHeightChangeEvent")
@interface UniInputKeyboardHeightChangeEvent : UniEvent
@end

@class UniJsBridgeImpl;

SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniJsSwiftApiWrapper")
@interface UniJsSwiftApiWrapper : NSObject
+ (void)runOnJsQueue:(void (^ _Nonnull)(void))runable;
+ (UniJsBridgeImpl * _Nullable)getJSBridgeImpl SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime11UniKeyEvent")
@interface UniKeyEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniKeyboardConfiguration") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardConfiguration : NSObject
/// Override the keyboardAppearance for all textField/textView. Default is NO.
@property (nonatomic) BOOL overrideAppearance;
/// If overrideKeyboardAppearance is YES, then all the textField keyboardAppearance is set using this property.
@property (nonatomic) UIKeyboardAppearance appearance;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime28UniKeyboardHeightChangeEvent")
@interface UniKeyboardHeightChangeEvent : UniAppEvent
@end

@class UITapGestureRecognizer;

/// Code-less drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.
/// Neither need to write any code nor any setup required and much more.
SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniKeyboardManager") SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager : NSObject
/// uni extend
@property (nonatomic, strong) UniEditComponent * _Nullable currentEditComponent;
/// Returns the default singleton instance.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UniKeyboardManager * _Nonnull shared;)
+ (UniKeyboardManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Enable/disable managing distance between keyboard and textField.
/// Default is YES(Enabled when class loads in <code>+(void)load</code> method).
@property (nonatomic) BOOL enable;
/// To set keyboard distance from textField. can’t be less than zero. Default is 10.0.
@property (nonatomic) CGFloat keyboardDistanceFromTextField;
/// Automatic add the UniIQToolbar functionality. Default is YES.
@property (nonatomic) BOOL enableAutoToolbar;
/// Configurations related to the toolbar display over the keyboard.
@property (nonatomic, readonly, strong) UniIQToolbarConfiguration * _Nonnull toolbarConfiguration;
/// Configuration related to keyboard appearance
@property (nonatomic, readonly, strong) UniKeyboardConfiguration * _Nonnull keyboardConfiguration;
/// Resigns Keyboard on touching outside of UITextField/View. Default is NO.
@property (nonatomic) BOOL resignOnTouchOutside;
/// TapGesture to resign keyboard on view’s touch.
/// It’s a readonly property and exposed only for adding/removing dependencies
/// if your added gesture does have collision with this one
@property (nonatomic, strong) UITapGestureRecognizer * _Nonnull resignFirstResponderGesture;
/// Resigns currently first responder field.
- (BOOL)resignFirstResponder;
/// If YES, then it plays inputClick sound on next/previous/done click.
@property (nonatomic) BOOL playInputClicks;
/// If YES, then calls ‘setNeedsLayout’ and ‘layoutIfNeeded’ on any frame update of to viewController’s view.
@property (nonatomic) BOOL layoutIfNeededOnUpdate;
/// Disable distance handling within the scope of disabled distance handling viewControllers classes.
/// Within this scope, ‘enabled’ property is ignored. Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledDistanceHandlingClasses;
/// Enable distance handling within the scope of enabled distance handling viewControllers classes.
/// Within this scope, ‘enabled’ property is ignored. Class should be kind of UIViewController.
/// If same Class is added in disabledDistanceHandlingClasses list,
/// then enabledDistanceHandlingClasses will be ignored.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledDistanceHandlingClasses;
/// Disable automatic toolbar creation within the scope of disabled toolbar viewControllers classes.
/// Within this scope, ‘enableAutoToolbar’ property is ignored. Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledToolbarClasses;
/// Enable automatic toolbar creation within the scope of enabled toolbar viewControllers classes.
/// Within this scope, ‘enableAutoToolbar’ property is ignored. Class should be kind of UIViewController.
/// If same Class is added in disabledToolbarClasses list, then enabledToolbarClasses will be ignore.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledToolbarClasses;
/// Allowed subclasses of UIView to add all inner textField,
/// this will allow to navigate between textField contains in different superview.
/// Class should be kind of UIView.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIView)> * _Nonnull toolbarPreviousNextAllowedClasses;
/// Disabled classes to ignore resignOnTouchOutside’ property, Class should be kind of UIViewController.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull disabledTouchResignedClasses;
/// Enabled classes to forcefully enable ‘resignOnTouchOutside’ property.
/// Class should be kind of UIViewController
/// . If same Class is added in disabledTouchResignedClasses list, then enabledTouchResignedClasses will be ignored.
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIViewController)> * _Nonnull enabledTouchResignedClasses;
/// if resignOnTouchOutside is enabled then you can customize the behavior
/// to not recognize gesture touches on some specific view subclasses.
/// Class should be kind of UIView. Default is [UIControl, UINavigationBar]
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(UIView)> * _Nonnull touchResignedGestureIgnoreClasses;
/// <hr/>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)reloadLayoutIfNeeded;
@end


@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)hideKeyboard;
@end




@class UIGestureRecognizer;

SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime)) <UIGestureRecognizerDelegate>
/// Note: returning YES is guaranteed to allow simultaneous recognition.
/// returning NO is not guaranteed to prevent simultaneous recognition,
/// as the other gesture’s delegate may return YES.
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
/// To not detect touch events in a subclass of UIControl,
/// these may have added their own selector for specific work
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) BOOL overrideKeyboardAppearance SWIFT_UNAVAILABLE_MSG("'overrideKeyboardAppearance' has been renamed to 'keyboardConfiguration.overrideAppearance'");
@property (nonatomic) UIKeyboardAppearance keyboardAppearance SWIFT_UNAVAILABLE_MSG("'keyboardAppearance' has been renamed to 'keyboardConfiguration.appearance'");
@end



SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) BOOL enableDebugging;
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) BOOL shouldResignOnTouchOutside SWIFT_UNAVAILABLE_MSG("'shouldResignOnTouchOutside' has been renamed to 'resignOnTouchOutside'");
@property (nonatomic) BOOL shouldPlayInputClicks SWIFT_UNAVAILABLE_MSG("'shouldPlayInputClicks' has been renamed to 'playInputClicks'");
- (void)registerTextFieldViewClass:(SWIFT_METATYPE(UIView) _Nonnull)aClass didBeginEditingNotificationName:(NSString * _Nonnull)didBeginEditingNotificationName didEndEditingNotificationName:(NSString * _Nonnull)didEndEditingNotificationName SWIFT_UNAVAILABLE_MSG("This feature has been removed due to few compatibility problems");
- (void)unregisterTextFieldViewClass:(SWIFT_METATYPE(UIView) _Nonnull)aClass didBeginEditingNotificationName:(NSString * _Nonnull)didBeginEditingNotificationName didEndEditingNotificationName:(NSString * _Nonnull)didEndEditingNotificationName SWIFT_UNAVAILABLE_MSG("This feature has been removed due to few compatibility problems");
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
- (void)registerKeyboardSizeChangeWithIdentifier:(NSObject * _Nonnull)identifier sizeHandler:(void (^ _Nonnull)(CGSize))sizeHandler SWIFT_UNAVAILABLE_MSG("This feature has been moved to UniKeyboardListener, use it directly by creating new instance");
- (void)unregisterKeyboardSizeChangeWithIdentifier:(NSObject * _Nonnull)identifier SWIFT_UNAVAILABLE_MSG("This feature has been moved to UniKeyboardListener, use it directly by creating new instance");
@property (nonatomic, readonly) BOOL keyboardShowing SWIFT_UNAVAILABLE_MSG("This feature has been moved to UniKeyboardListener, use it directly by creating new instance");
@property (nonatomic, readonly) CGRect keyboardFrame SWIFT_UNAVAILABLE_MSG("This feature has been moved to UniKeyboardListener, use it directly by creating new instance");
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
/// reloadInputViews to reload toolbar buttons enable/disable state on the fly Enhancement ID #434.
- (void)reloadInputViews;
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
/// Returns YES if can navigate to previous responder textField/textView, otherwise NO.
@property (nonatomic, readonly) BOOL canGoPrevious;
/// Returns YES if can navigate to next responder textField/textView, otherwise NO.
@property (nonatomic, readonly) BOOL canGoNext;
/// Navigate to previous responder textField/textView.
- (BOOL)goPrevious;
/// Navigate to next responder textField/textView.
- (BOOL)goNext;
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic, copy) NSString * _Nullable toolbarTitlBarButtonItemAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'toolbarTitlBarButtonItemAccessibilityLabel' has been renamed to 'accessibilityLabel'");
@property (nonatomic) BOOL shouldShowToolbarPlaceholder SWIFT_UNAVAILABLE_MSG("'shouldShowToolbarPlaceholder' has been renamed to 'toolbarConfiguration.placeholderConfiguration.showPlaceholder'");
@property (nonatomic, strong) UIFont * _Nullable placeholderFont SWIFT_UNAVAILABLE_MSG("'placeholderFont' has been renamed to 'toolbarConfiguration.placeholderConfiguration.font'");
@property (nonatomic, strong) UIColor * _Nullable placeholderColor SWIFT_UNAVAILABLE_MSG("'placeholderColor' has been renamed to 'toolbarConfiguration.placeholderConfiguration.color'");
@property (nonatomic, strong) UIColor * _Nullable placeholderButtonColor SWIFT_UNAVAILABLE_MSG("'placeholderButtonColor' has been renamed to 'toolbarConfiguration.placeholderConfiguration.buttonColor'");
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic) enum UniIQAutoToolbarManageBehavior toolbarManageBehaviour SWIFT_UNAVAILABLE_MSG("'toolbarManageBehaviour' has been renamed to 'toolbarConfiguration.manageBehavior'");
@property (nonatomic) BOOL shouldToolbarUsesTextFieldTintColor SWIFT_UNAVAILABLE_MSG("'shouldToolbarUsesTextFieldTintColor' has been renamed to 'toolbarConfiguration.useTextFieldTintColor'");
@property (nonatomic, strong) UIColor * _Nullable toolbarTintColor SWIFT_UNAVAILABLE_MSG("'toolbarTintColor' has been renamed to 'toolbarConfiguration.tintColor'");
@property (nonatomic, strong) UIColor * _Nullable toolbarBarTintColor SWIFT_UNAVAILABLE_MSG("'toolbarBarTintColor' has been renamed to 'toolbarConfiguration.barTintColor'");
@property (nonatomic) enum UniIQPreviousNextDisplayMode previousNextDisplayMode SWIFT_UNAVAILABLE_MSG("'previousNextDisplayMode' has been renamed to 'toolbarConfiguration.previousNextDisplayMode'");
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
/// Will be called then movedDistance will be changed
@property (nonatomic, copy) void (^ _Nullable movedDistanceChanged)(CGFloat);
@end


SWIFT_AVAILABILITY(ios_app_extension,unavailable)
@interface UniKeyboardManager (SWIFT_EXTENSION(DCloudUniappRuntime))
@property (nonatomic, strong) UIImage * _Nullable toolbarPreviousBarButtonItemImage SWIFT_UNAVAILABLE_MSG("'toolbarPreviousBarButtonItemImage' has been renamed to 'toolbarConfiguration.previousBarButtonConfiguration.image': To change, please assign a new toolbarConfiguration.previousBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarPreviousBarButtonItemText SWIFT_UNAVAILABLE_MSG("'toolbarPreviousBarButtonItemText' has been renamed to 'toolbarConfiguration.previousBarButtonConfiguration.title': To change, please assign a new toolbarConfiguration.previousBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarPreviousBarButtonItemAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'toolbarPreviousBarButtonItemAccessibilityLabel' has been renamed to 'accessibilityLabel': To change, please assign a new toolbarConfiguration.previousBarButtonConfiguration");
@property (nonatomic, strong) UIImage * _Nullable toolbarNextBarButtonItemImage SWIFT_UNAVAILABLE_MSG("'toolbarNextBarButtonItemImage' has been renamed to 'toolbarConfiguration.nextBarButtonConfiguration.image': To change, please assign a new toolbarConfiguration.nextBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarNextBarButtonItemText SWIFT_UNAVAILABLE_MSG("'toolbarNextBarButtonItemText' has been renamed to 'toolbarConfiguration.nextBarButtonConfiguration.title': To change, please assign a new toolbarConfiguration.nextBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarNextBarButtonItemAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'toolbarNextBarButtonItemAccessibilityLabel' has been renamed to 'accessibilityLabel': To change, please assign a new toolbarConfiguration.nextBarButtonConfiguration");
@property (nonatomic, strong) UIImage * _Nullable toolbarDoneBarButtonItemImage SWIFT_UNAVAILABLE_MSG("'toolbarDoneBarButtonItemImage' has been renamed to 'toolbarConfiguration.doneBarButtonConfiguration.image': To change, please assign a new toolbarConfiguration.doneBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarDoneBarButtonItemText SWIFT_UNAVAILABLE_MSG("'toolbarDoneBarButtonItemText' has been renamed to 'toolbarConfiguration.doneBarButtonConfiguration.title': To change, please assign a new toolbarConfiguration.doneBarButtonConfiguration");
@property (nonatomic, copy) NSString * _Nullable toolbarDoneBarButtonItemAccessibilityLabel SWIFT_UNAVAILABLE_MSG("'toolbarDoneBarButtonItemAccessibilityLabel' has been renamed to 'accessibilityLabel': To change, please assign a new toolbarConfiguration.doneBarButtonConfiguration");
@end


/// scroll-view元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime20UniScrollViewElement_")
@protocol UniScrollViewElement <UniElement, JSExport>
/// <ul>
///   <li>
///     使界面滚动到给定元素的指定坐标位置 仅scroll-view、list-view组件支持
///   </li>
///   <li>
///     @param {number} x x轴要滚动到坐标位置(单位px)
///   </li>
///   <li>
///     @param {number} y y轴要滚动到坐标位置(单位px)
///   </li>
/// </ul>
- (void)scrollTo:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
/// <ul>
///   <li>
///     使得元素滚动一段特定距离 仅scroll-view、list-view组件支持
///   </li>
///   <li>
///     @param {number} x x轴要滚动的距离(单位px)
///   </li>
///   <li>
///     @param {number} y y轴要滚动的距离(单位px)
///   </li>
/// </ul>
- (void)scrollBy:(NSNumber * _Nonnull)x :(NSNumber * _Nonnull)y;
@end


/// list-view元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime18UniListViewElement_")
@protocol UniListViewElement <UniScrollViewElement>
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime13UniMouseEvent")
@interface UniMouseEvent : UniEvent
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniNativeToJSEvent")
@interface UniNativeToJSEvent : UniEvent
@end


/// object元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime20UniNativeViewElement_")
@protocol UniNativeViewElement <UniElement>
/// 绑定iOS平台原生view
- (void)bindIOSView:(UIView * _Nonnull)view;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniNativeViewElementImpl")
@interface UniNativeViewElementImpl : UniElementImpl <UniNativeViewElement>
- (void)bindIOSView:(UIView * _Nonnull)view;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniNativeViewEvent")
@interface UniNativeViewEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniNativeViewInitEvent")
@interface UniNativeViewInitEvent : UniEvent
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime13UniNormalPage_")
@protocol UniNormalPage <UniPage>
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniNormalPageImpl")
@interface UniNormalPageImpl : UniPageImpl <UniNormalPage>
- (id <UniPage> _Nullable)getParentPage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniOsThemeChangeEvent")
@interface UniOsThemeChangeEvent : UniAppEvent
@end



SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime11UniPageBody_")
@protocol UniPageBody <JSExport>
/// <ul>
///   <li>
///     body左边距在屏幕中的位置
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull left;
/// <ul>
///   <li>
///     body右边距在屏幕中的位置
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull right;
/// <ul>
///   <li>
///     body顶部在屏幕中的位置
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull top;
/// <ul>
///   <li>
///     body底部在屏幕中的位置
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull bottom;
/// <ul>
///   <li>
///     body在屏幕中的宽度
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull width;
/// <ul>
///   <li>
///     body在屏幕中的高度
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull height;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime15UniPageBodyImpl")
@interface UniPageBodyImpl : NSObject <UniPageBody>
@property (nonatomic, strong) NSNumber * _Nonnull left;
@property (nonatomic, strong) NSNumber * _Nonnull right;
@property (nonatomic, strong) NSNumber * _Nonnull top;
@property (nonatomic, strong) NSNumber * _Nonnull bottom;
@property (nonatomic, strong) NSNumber * _Nonnull width;
@property (nonatomic, strong) NSNumber * _Nonnull height;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime12UniPageEvent")
@interface UniPageEvent : UniEvent
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniPageScrollEvent")
@interface UniPageScrollEvent : UniPageEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime15UniPointerEvent")
@interface UniPointerEvent : UniMouseEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniPrivacyChangeEvent")
@interface UniPrivacyChangeEvent : UniAppEvent
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime11UniProvider_")
@protocol UniProvider <JSExport>
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic) BOOL isAppExist;
@optional
- (void)checkAppExist;
@end


SWIFT_CLASS_NAMED("UniProviderManager")
@interface UniProviderManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UniProviderManager * _Nonnull shared;)
+ (UniProviderManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)registerProviderWithService:(NSString * _Nonnull)service providerName:(NSString * _Nonnull)providerName provider:(id _Nonnull)provider;
- (NSArray<id <UniProvider>> * _Nonnull)getProviders:(NSString * _Nonnull)service SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniRefresherEvent")
@interface UniRefresherEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniRefresherabortEvent")
@interface UniRefresherabortEvent : UniRefresherEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniRefresherpullingEvent")
@interface UniRefresherpullingEvent : UniRefresherEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniRefresherrefreshEvent")
@interface UniRefresherrefreshEvent : UniRefresherEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniRefresherrestoreEvent")
@interface UniRefresherrestoreEvent : UniRefresherEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime13UniResetEvent")
@interface UniResetEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime14UniResizeEvent")
@interface UniResizeEvent : UniPageEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniResizeObserver")
@interface UniResizeObserver : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime25UniRichTextItemClickEvent")
@interface UniRichTextItemClickEvent : UniEvent
@end


SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime17UniSafeAreaInsets_")
@protocol UniSafeAreaInsets <JSExport>
/// <ul>
///   <li>
///     安全区域左侧到左侧边界距离
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull left;
/// <ul>
///   <li>
///     安全区域右侧到右侧边界距离
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull right;
/// <ul>
///   <li>
///     安全区域顶部到顶部边界距离
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull top;
/// <ul>
///   <li>
///     安全区域底部到底部边界距离
///   </li>
/// </ul>
@property (nonatomic, strong) NSNumber * _Nonnull bottom;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniSafeAreaInsetsImpl")
@interface UniSafeAreaInsetsImpl : NSObject <UniSafeAreaInsets>
@property (nonatomic, strong) NSNumber * _Nonnull left;
@property (nonatomic, strong) NSNumber * _Nonnull right;
@property (nonatomic, strong) NSNumber * _Nonnull top;
@property (nonatomic, strong) NSNumber * _Nonnull bottom;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime14UniScrollEvent")
@interface UniScrollEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniScrollEndEvent")
@interface UniScrollEndEvent : UniScrollEvent
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniScrollToLowerEvent")
@interface UniScrollToLowerEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniScrollToUpperEvent")
@interface UniScrollToUpperEvent : UniEvent
@end



/// slider元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime16UniSliderElement_")
@protocol UniSliderElement <UniElement, UniNativeFormControl>
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime14UniSubmitEvent")
@interface UniSubmitEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime29UniSwiperAnimationFinishEvent")
@interface UniSwiperAnimationFinishEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniSwiperChangeEvent")
@interface UniSwiperChangeEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime24UniSwiperTransitionEvent")
@interface UniSwiperTransitionEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniSwitchChangeEvent")
@interface UniSwitchChangeEvent : UniEvent
@end


/// switch元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime16UniSwitchElement_")
@protocol UniSwitchElement <UniElement, UniNativeFormControl>
- (void)click;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime17UniTabMidTapEvent")
@interface UniTabMidTapEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime14UniTabTapEvent")
@interface UniTabTapEvent : UniEvent
@end


/// tabs元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime14UniTabsElement_")
@protocol UniTabsElement <UniElement, JSExport>
/// <ul>
///   <li>
///     添加item
///   </li>
///   <li>
///     @param pageId 页面id
///   </li>
/// </ul>
- (void)appendItem:(NSString * _Nonnull)pageId;
/// <ul>
///   <li>
///     添加item
///   </li>
///   <li>
///     @param itemElement item的元素对象
///   </li>
///   <li>
///     初始化tabBar
///   </li>
/// </ul>
- (void)createTabBar:(NSDictionary<NSString *, id> * _Nonnull)style;
/// <ul>
///   <li>
///     添加自定义tabBar
///   </li>
///   <li>
///     @param tabBar tabBar元素
///   </li>
///   <li>
///     @param direction 排列方向
///   </li>
///   <li>
///     item选中高亮
///   </li>
///   <li>
///     @param 被选中页面id
///   </li>
///   <li>
///     @index item下标
///   </li>
/// </ul>
- (void)switchSelect:(NSString * _Nonnull)pageId :(NSNumber * _Nonnull)index;
/// <ul>
///   <li>
///     隐藏TabBar
///   </li>
/// </ul>
- (void)hideTabBar:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     显示tabBar
///   </li>
/// </ul>
- (void)showTabBar:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     为 tabBar 某一项的右上角添加文本
///   </li>
/// </ul>
- (void)setTabBarBadge:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     移除 tabBar 某一项右上角的文本
///   </li>
/// </ul>
- (void)removeTabBarBadge:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     显示 tabBar 某一项的右上角的红点
///   </li>
/// </ul>
- (void)showTabBarRedDot:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     隐藏 tabBar 某一项的右上角的红点
///   </li>
/// </ul>
- (void)hideTabBarRedDot:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     动态设置 tabBar 的整体样式
///   </li>
/// </ul>
- (void)setTabBarStyle:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     动态设置 tabBar 某一项的内容
///   </li>
/// </ul>
- (void)setTabBarItem:(NSDictionary<NSString *, id> * _Nonnull)op;
/// <ul>
///   <li>
///     获取tabbar高度
///   </li>
/// </ul>
- (NSNumber * _Nonnull)getTabBarHeight SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     只读属性 tabBar是否隐藏
///   </li>
/// </ul>
@property (nonatomic, readonly) BOOL isTabBarVisible;
/// <ul>
///   <li>
///     只读属性 当前显示itemId
///   </li>
/// </ul>
@property (nonatomic, readonly, copy) NSString * _Nullable currentItemId;
@end



SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniTextareaBlurEvent")
@interface UniTextareaBlurEvent : UniEvent
@end


/// textarea元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime18UniTextareaElement_")
@protocol UniTextareaElement <UniElement, UniNativeFormControl>
/// <ul>
///   <li>
///     表单的控件名称，作为键值对的一部分与表单(form组件)一同提交
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic, copy) NSString * _Nonnull name;
/// <ul>
///   <li>
///     input的类型
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic, copy) NSString * _Nonnull type;
/// <ul>
///   <li>
///     是否禁用
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic) BOOL disabled;
/// <ul>
///   <li>
///     自动获取焦点
///   </li>
///   <li>
///   </li>
///   <li>
///     @uniPlatform {
///   </li>
///   <li>
///     “app”: {
///   </li>
///   <li>
///     \code
///        "android": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "5.0",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "4.0"
///
///     \endcode</li>
///   <li>
///     \code
///        },
///
///     \endcode</li>
///   <li>
///     \code
///        "ios": {
///
///     \endcode</li>
///   <li>
///     \code
///            "osVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "uniVer": "x",
///
///     \endcode</li>
///   <li>
///     \code
///            "unixVer": "x"
///
///     \endcode</li>
///   <li>
///     \code
///         }
///
///     \endcode</li>
///   <li>
///     }
///   </li>
///   <li>
///     }
///   </li>
/// </ul>
@property (nonatomic) BOOL autofocus;
- (void)focus;
- (void)blur;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniTextareaFocusEvent")
@interface UniTextareaFocusEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime26UniTextareaLineChangeEvent")
@interface UniTextareaLineChangeEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime13UniTouchEvent")
@interface UniTouchEvent : UniEvent
@end


SWIFT_CLASS_NAMED("UniVSyncManager")
@interface UniVSyncManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UniVSyncManager * _Nonnull shared;)
+ (UniVSyncManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) NSInteger count;)
+ (NSInteger)count SWIFT_WARN_UNUSED_RESULT;
+ (void)setCount:(NSInteger)value;
- (NSNumber * _Nonnull)requestAnimationFrame:(void (^ _Nonnull)(CFTimeInterval))cb SWIFT_WARN_UNUSED_RESULT;
- (void)cancelAnimationFrame:(NSInteger)reqId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime16UniViewComponent")
@interface UniViewComponent : UniComponent
- (void)_frameDidCalculated:(BOOL)isChanged;
- (void)_drawContentWithContext:(CGContextRef _Nullable)context;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime18UniViewElementImpl")
@interface UniViewElementImpl : UniElementImpl
- (id <DrawableContext> _Nullable)getDrawableContext SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime23UniWaterflowElementImpl")
@interface UniWaterflowElementImpl : UniElementImpl
- (void)layoutBefore;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime34UniWebViewContentHeightChangeEvent")
@interface UniWebViewContentHeightChangeEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime27UniWebViewDidTerminateEvent")
@interface UniWebViewDidTerminateEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime23UniWebViewDownloadEvent")
@interface UniWebViewDownloadEvent : UniEvent
@end


/// web-view元素对象
/// @package io.dcloud.uniapp.runtime
/// @autodoc false
SWIFT_PROTOCOL("_TtP19DCloudUniappRuntime17UniWebViewElement_")
@protocol UniWebViewElement <UniElement, JSExport>
/// <ul>
///   <li>
///     后退
///   </li>
/// </ul>
- (void)back;
/// <ul>
///   <li>
///     前进
///   </li>
/// </ul>
- (void)forward;
/// <ul>
///   <li>
///     重新加载
///   </li>
/// </ul>
- (void)reload;
/// <ul>
///   <li>
///     停止加载
///   </li>
/// </ul>
- (void)stop;
/// <ul>
///   <li>
///     原生和WebView通信（执行JS脚本）
///   </li>
/// </ul>
- (void)evalJS:(NSString * _Nonnull)js;
/// 获取webview的contentHeight
- (float)getContentHeight SWIFT_WARN_UNUSED_RESULT;
- (void)loadData:(id _Nonnull)op;
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime32UniWebViewElementLoadDataOptions")
@interface UniWebViewElementLoadDataOptions : NSObject
@property (nonatomic, copy) NSString * _Nonnull data;
@property (nonatomic, copy) NSString * _Nullable mimeType;
@property (nonatomic, copy) NSString * _Nullable encoding;
@property (nonatomic, copy) NSString * _Nullable baseURL;
- (nonnull instancetype)init:(UTSJSONObject * _Nonnull)obj OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime20UniWebViewErrorEvent")
@interface UniWebViewErrorEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime19UniWebViewLoadEvent")
@interface UniWebViewLoadEvent : UniEvent
@end


/// // 从4.12版本开始废弃，但为了向下兼容，仍然发送该事件
SWIFT_CLASS("_TtC19DCloudUniappRuntime21UniWebViewLoadedEvent")
@interface UniWebViewLoadedEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniWebViewLoadingEvent")
@interface UniWebViewLoadingEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime22UniWebViewMessageEvent")
@interface UniWebViewMessageEvent : UniEvent
@end


SWIFT_CLASS("_TtC19DCloudUniappRuntime29UniWebViewServiceMessageEvent")
@interface UniWebViewServiceMessageEvent : UniPageEvent
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
