{"version":3,"sources":["pages/index/page3native.uvue"],"names":[],"mappings":"AAUA,OAAO,eAAc,MAAO,8BAA8B,CAAA;AAE1D,MAAK,OAAQ,GAAE,eAAA,CAAA;IACb,IAAI;QACF,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,EAAC;SACR,CAAA;IACH,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,MAAK,GAAI,IAAI,eAAe,CAAC,eAAe,EAAE,GAAG,CAAC,CAAA,CAAE,kBAAiB;IAC5E,CAAC;IACD,OAAO,EAAE;QACP,OAAO;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACvB,CAAC;QACD,QAAQ;YACN,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC;gBAC1D,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,IAAG,GAAI,SAAS,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAA;iBAC1C;qBAAO;oBACL,IAAI,CAAC,IAAG,GAAI,SAAS,KAAK,EAAE,CAAA;iBAC9B;YACF,CAAC,CAAC,CAAA;QACJ,CAAC;QACD,SAAS;YACP,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,EAAC;gBACtD,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,IAAG,GAAI,MAAM,CAAA;iBACpB;qBAAO;oBACL,IAAI,CAAC,IAAG,GAAI,SAAS,KAAK,EAAE,CAAA;iBAC9B;YACF,CAAC,CAAC,CAAA;QACJ,CAAA;KACF;CACD,CAAA,CAAA;;;;;WA5CC,GAAA,CAKO,MAAA,EAAA,IAAA,EAAA;QAJL,GAAA,CAAuC,QAAA,EAAA,GAAA,CAAA,EAA9B,OAAK,EAAE,IAAA,CAAA,OAAO,EAAA,CAAA,EAAE,OAAK,EAAA,CAAA,CAAA,WAAA,EAAA,CAAA,SAAA,CAAA,CAAA;QAC9B,GAAA,CAAwC,QAAA,EAAA,GAAA,CAAA,EAA/B,OAAK,EAAE,IAAA,CAAA,QAAQ,EAAA,CAAA,EAAE,OAAK,EAAA,CAAA,CAAA,WAAA,EAAA,CAAA,SAAA,CAAA,CAAA;QAC/B,GAAA,CAAyC,QAAA,EAAA,GAAA,CAAA,EAAhC,OAAK,EAAE,IAAA,CAAA,SAAS,EAAA,CAAA,EAAE,OAAK,EAAA,CAAA,CAAA,WAAA,EAAA,CAAA,SAAA,CAAA,CAAA;QAChC,GAAA,CAAuB,MAAA,EAAA,IAAA,EAAA,GAAA,CAAd,IAAA,CAAA,IAAI,CAAA,EAAA,CAAA,CAAA,UAAA,CAAA","file":"pages/index/page3native.uvue","sourcesContent":["<template>\n  <view>\n    <button @click=\"connect\">连接控制器</button>\n    <button @click=\"readData\">读取寄存器</button>\n    <button @click=\"writeData\">写入寄存器</button>\n    <text>{{ data }}</text>\n  </view>\n</template>\n\n<script lang=\"ts\">\nimport ModbusTCPClient from '@/uni_modules/my-test-plugin';\n\nexport default {\n  data() {\n    return {\n      client: null,\n      data: ''\n    };\n  },\n  onLoad() {\n    this.client = new ModbusTCPClient('192.168.1.100', 502); // 替换为实际控制器 IP 和端口\n  },\n  methods: {\n    connect() {\n      this.client.connect();\n    },\n    readData() {\n      this.client.readHoldingRegisters(40001, 1, (result, error) => {\n        if (result) {\n          this.data = `读取结果: ${result.join(', ')}`;\n        } else {\n          this.data = `读取失败: ${error}`;\n        }\n      });\n    },\n    writeData() {\n      this.client.writeRegister(40001, 123, (success, error) => {\n        if (success) {\n          this.data = '写入成功';\n        } else {\n          this.data = `写入失败: ${error}`;\n        }\n      });\n    }\n  }\n};\n</script>"]}