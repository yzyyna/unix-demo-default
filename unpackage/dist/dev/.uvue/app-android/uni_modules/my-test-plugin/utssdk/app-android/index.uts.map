{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/my-test-plugin/utssdk/app-android/index.uts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,+BAA+B;AAC/B,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAE/E,8BAA8B;AAC9B,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C;;;;;;;;;;GAUG;AAEH;;GAEG;AAGH;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,CAAC,MAAM,KAAK,EAAG,KAAK,GAAG,UAAU,OAAO,EAAG,YAAY;IAC3D,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE;QAC1B,OAAO;QACP,MAAM,GAAG,EAAG,WAAW,GAAG;YACxB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,cAAc;SACvB,CAAC;QACF,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;KACzB;SAAM;QACL,OAAO;QACP,MAAM,GAAG,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;QACvC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAA;KACxB;AACH,CAAC,CAAA;AAED;;;;;;;;;;GAUG;AACH,MAAM,CAAC,MAAM,SAAS,EAAG,SAAS,GAAG,UAAU,MAAM,EAAG,OAAO,GAAI,WAAW;IAC5E,sBAAsB;IACtB,MAAM,GAAG,EAAG,WAAW,GAAG;QACxB,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,cAAc;KACvB,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC,CAAA;AAED;;GAEG","sourcesContent":["/**\n * 引用 Android 系统库，示例如下：\n * import { Context } from \"android.content.Context\";\n * [可选实现，按需引入]\n */\n\n/* 引入 interface.uts 文件中定义的变量 */\nimport { MyApiOptions, MyApiResult, MyApi, MyApiSync } from '../interface.uts';\n\n/* 引入 unierror.uts 文件中定义的变量 */\nimport { MyApiFailImpl } from '../unierror';\n\n/**\n * 引入三方库\n * [可选实现，按需引入]\n *\n * 在 Android 平台引入三方库有以下两种方式：\n * 1、[推荐] 通过 仓储 方式引入，将 三方库的依赖信息 配置到 config.json 文件下的 dependencies 字段下。详细配置方式[详见](https://uniapp.dcloud.net.cn/plugin/uts-plugin.html#dependencies)\n * 2、直接引入，将 三方库的aar或jar文件 放到libs目录下。更多信息[详见](https://uniapp.dcloud.net.cn/plugin/uts-plugin.html#android%E5%B9%B3%E5%8F%B0%E5%8E%9F%E7%94%9F%E9%85%8D%E7%BD%AE)\n *\n * 在通过上述任意方式依赖三方库后，使用时需要在文件中 import，如下示例：\n * import { LottieAnimationView } from 'com.airbnb.lottie.LottieAnimationView'\n */\n\n/**\n * UTSAndroid 为平台内置对象，不需要 import 可直接调用其API，[详见](https://uniapp.dcloud.net.cn/uts/utsandroid.html#utsandroid)\n */\n\n\n/**\n * 异步方法\n *\n * uni-app项目中（vue/nvue）调用示例：\n * 1、引入方法声明 import { myApi } from \"@/uni_modules/uts-api\"\n * 2、方法调用\n * myApi({\n *   paramA: false,\n *   complete: (res) => {\n *      __f__('log','at uni_modules/my-test-plugin/utssdk/app-android/index.uts:39',res)\n *   }\n * });\n * uni-app x项目（uvue）中调用示例：\n * 1、引入方法及参数声明 import { myApi, MyApiOptions } from \"@/uni_modules/uts-api\";\n * 2、方法调用\n * let options = {\n *   paramA: false,\n *   complete: (res : any) => {\n *     __f__('log','at uni_modules/my-test-plugin/utssdk/app-android/index.uts:48',res)\n *   }\n * } as MyApiOptions;\n * myApi(options);\n *\n */\nexport const myApi : MyApi = function (options : MyApiOptions) {\n  if (options.paramA == true) {\n    // 返回数据\n    const res : MyApiResult = {\n      fieldA: 85,\n      fieldB: true,\n      fieldC: 'some message'\n    };\n    options.success?.(res);\n    options.complete?.(res);\n  } else {\n    // 返回错误\n    const err = new MyApiFailImpl(9010001);\n    options.fail?.(err)\n    options.complete?.(err)\n  }\n}\n\n/**\n * 同步方法\n *\n * uni-app项目中（vue/nvue）调用示例：\n * 1、引入方法声明 import { myApiSync } from \"@/uni_modules/uts-api\"\n * 2、方法调用 myApiSync(true)\n *\n * uni-app x项目（uvue）中调用示例：\n * 1、引入方法及参数声明 import { myApiSync } from \"@/uni_modules/uts-api\";\n * 2、方法调用 myApiSync(true)\n */\nexport const myApiSync : MyApiSync = function (paramA : boolean) : MyApiResult {\n  // 返回数据，根据插件功能获取实际的返回值\n  const res : MyApiResult = {\n    fieldA: 85,\n    fieldB: paramA,\n    fieldC: 'some message'\n  };\n  return res;\n}\n\n/**\n * 更多插件开发的信息详见：https://uniapp.dcloud.net.cn/plugin/uts-plugin.html\n */\n"]}