{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAA;AACtG,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAI/B,iFAAiF;AACjF,kFAAkF;AAClF,MAAM,CAAC,MAAM,OAAO,EAAG,WAAW,GAAG;IACpC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,GAAG,iBAAiB,EAAE,IAAI,GAAG,GAAG,EAC7E,UAAU,GAAG,CAAC,IAAI,EAAG,OAAO,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;QAC5C,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,UAAU,CAAC,CAAA;QACpF,IAAI,IAAI,EAAE;YACT,MAAM,MAAM,EAAG,MAAM,GAAG,IAAI,CAAA;YAC5B,MAAM,MAAM,EAAG,MAAM,GAAG,EAAE,CAAA;YAE1B,mBAAmB,CAAC,oBAAoB,CAAC,YAAY,GAAG,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,UAAU,GAAG,CAAC,SAAS,EAAG,GAAG,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;gBAC7H,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAGxG,CAAC,CAAC,CAAA;SACF;aAAM;SAEN;IACF,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AACD,qCAAqC;AACrC,MAAM,CAAC,MAAM,UAAU,EAAG,WAAW,GAAG;IAEvC,mBAAmB,CAAC,sBAAsB,EAAE,CAAA;AAC7C,CAAC,CAAA;AACD,MAAM,CAAC,MAAM,KAAK,EAAG,WAAW,GAAG;IAElC,mBAAmB,CAAC,OAAO,EAAE,CAAA;AAC9B,CAAC,CAAA;AAED,YAAY;AACZ,MAAM,CAAC,MAAM,qBAAqB,EAAG,iBAAiB,GAAG,UACxD,aAAa,EAAG,MAAM,EACtB,OAAO,EAAG,MAAM,EAAE,EAClB,QAAQ,EAAG,qBAAqB;IAEhC,wCAAwC;IACxC,MAAM,SAAS,EAAG,MAAM,GAAG,IAAI,CAAA;IAC/B,MAAM,SAAS,EAAG,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;IAE/C,oBAAoB;IACpB,mBAAmB,CAAC,qBAAqB,CACxC,YAAY,GAAG,SAAS,EACxB,MAAM,GAAG,SAAS,EAClB,UAAU,GAAG,CAAC,OAAO,EAAG,OAAO,EAAE,KAAK,EAAG,MAAM,GAAG,IAAI,EAAE,EAAE;QACzD,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;IACzB,CAAC,CACD,CAAA;AACF,CAAC,CAAA","sourcesContent":["import { connectType, connectType2, WriteRegisterType, WriteRegisterCallback } from '../interface.uts'\r\nimport { UInt16 } from 'Swift';\r\n\r\n\r\n\r\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.130.30', port = 502,\r\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\r\nexport const connect : connectType = function () {\r\n\tFPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\r\n\t\tcompletion = (Bool : Boolean, Error : any) => {\r\n\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:11','uts:连接成功')\r\n\t\t\tif (Bool) {\r\n\t\t\t\tconst startA : UInt16 = 0x00\r\n\t\t\t\tconst countA : UInt16 = 20\r\n\r\n\t\t\t\tFPSSModbusTcpNative.readHoldingRegisters(startAddress = startA, count = countA, completion = (registers : any, Error : any) => {\r\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:17','uts:读取成功', registers, Error);\r\n\r\n\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\r\n\t\t\t}\r\n\t\t})\r\n}\r\n// 直接导出disConnect函数，移除中间变量disConnect0\r\nexport const disConnect : connectType = function () {\r\n\r\n\tFPSSModbusTcpNative.disconnectModbusServer()\r\n}\r\nexport const myApi : connectType = function () {\r\n\r\n\tFPSSModbusTcpNative.myApiNa()\r\n}\r\n\r\n// 写入寄存器功能实现\r\nexport const writeHoldingRegisters : WriteRegisterType = function (\r\n\t_startAddress : number,\r\n\t_values : number[],\r\n\tcallback : WriteRegisterCallback\r\n) {\r\n\t// 将JavaScript的number类型转换为Swift的UInt16类型\r\n\tconst startAddr : UInt16 = 0x00\r\n\tconst regValues : UInt16[] = [0xFF, 0x10, 0x11]\r\n\r\n\t// 调用原生Swift方法执行写入操作\r\n\tFPSSModbusTcpNative.writeHoldingRegisters(\r\n\t\tstartAddress = startAddr,\r\n\t\tvalues = regValues,\r\n\t\tcompletion = (success : Boolean, error : string | null) => {\r\n\t\t\tcallback(success, error)\r\n\t\t}\r\n\t)\r\n}"]}