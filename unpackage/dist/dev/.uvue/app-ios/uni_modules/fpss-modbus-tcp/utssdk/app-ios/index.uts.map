{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAI/B,iFAAiF;AACjF,kFAAkF;AAClF,MAAM,CAAC,MAAM,OAAO,EAAG,WAAW,GAAG;IACpC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,GAAG,iBAAiB,EAAE,IAAI,GAAG,GAAG,EAC7E,UAAU,GAAG,CAAC,IAAI,EAAG,OAAO,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;QAC5C,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjG,IAAI,IAAI,EAAE;YACT,MAAM,MAAM,EAAG,MAAM,GAAG,IAAI,CAAA;YAC5B,MAAM,MAAM,EAAG,MAAM,GAAG,CAAC,CAAA;YACzB,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,YAAY,MAAM,SAAS,MAAM,EAAE,CAAC,CAAC;YAC9G,mBAAmB,CAAC,oBAAoB,CAAC,YAAY,GAAG,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,UAAU,GAAG,CAAC,MAAM,EAAG,GAAG,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;gBAC1H,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,CAAC,CAAC;gBACjF,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxG,OAAO;gBACP,UAAU,EAAE,CAAA;YACb,CAAC,CAAC,CAAA;SACF;aAAM;YACN,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,KAAK,CAAC,CAAC;SAChF;IACF,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AACD,qCAAqC;AACrC,MAAM,CAAC,MAAM,UAAU,EAAG,WAAW,GAAG;IACvC,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,CAAC,CAAC;IACjF,mBAAmB,CAAC,sBAAsB,EAAE,CAAA;AAC7C,CAAC,CAAA;AACD,MAAM,CAAC,MAAM,KAAK,EAAG,WAAW,GAAG;IAClC,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;IAC5G,mBAAmB,CAAC,OAAO,EAAE,CAAA;AAC9B,CAAC,CAAA","sourcesContent":["import { connectType, connectType2 } from '../interface.uts'\nimport { UInt16 } from 'Swift';\n\n\n\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.130.30', port = 502,\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\nexport const connect : connectType = function () {\n\tFPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\n\t\tcompletion = (Bool : Boolean, Error : any) => {\n\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:11',Bool ? '链接成功' : '连接失败');\n\t\t\tif (Bool) {\n\t\t\t\tconst startA : UInt16 = 0x00\n\t\t\t\tconst countA : UInt16 = 5\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:15',`开始读取起始地址:${startA}寄存器数量:${countA}`);\n\t\t\t\tFPSSModbusTcpNative.readHoldingRegisters(startAddress = startA, count = countA, completion = (UInt16 : any, Error : any) => {\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:17','读取结束');\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:18',UInt16, JSON.stringify(Error));\n\t\t\t\t\t// 断开连接\n\t\t\t\t\tdisConnect()\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:23',Error);\n\t\t\t}\n\t\t})\n}\n// 直接导出disConnect函数，移除中间变量disConnect0\nexport const disConnect : connectType = function () {\n\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:29','断开连接');\n\tFPSSModbusTcpNative.disconnectModbusServer()\n}\nexport const myApi : connectType = function () {\n\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:33',\"%c ✨ myApi??? ✨ \", \"color:#0ff;\");\n\tFPSSModbusTcpNative.myApiNa()\n}"]}