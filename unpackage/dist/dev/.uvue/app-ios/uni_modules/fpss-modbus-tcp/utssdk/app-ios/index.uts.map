{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AAI5D,iFAAiF;AACjF,kFAAkF;AAClF,MAAM,CAAC,MAAM,OAAO,EAAG,WAAW,GAAG;IACpC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,GAAG,iBAAiB,EAAE,IAAI,GAAG,GAAG,EAC7E,UAAU,GAAG,CAAC,IAAI,EAAG,OAAO,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;QAC5C,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACjG,IAAI,IAAI,EAAE;YACT,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,CAAC,CAAC;YACjF,mBAAmB,CAAC,oBAAoB,CAAC,YAAY,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,MAAM,EAAG,GAAG,EAAE,KAAK,EAAG,GAAG,EAAE,EAAE;gBAChH,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,CAAC,CAAC;gBACjF,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxG,OAAO;gBACP,UAAU,EAAE,CAAA;YACb,CAAC,CAAC,CAAA;SACF;aAAM;YACN,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,KAAK,CAAC,CAAC;SAChF;IACF,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AACD,qCAAqC;AACrC,MAAM,CAAC,MAAM,UAAU,EAAG,WAAW,GAAG;IACpC,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,MAAM,CAAC,CAAC;IACjF,mBAAmB,CAAC,sBAAsB,EAAE,CAAA;AAChD,CAAC,CAAA;AACD,MAAM,CAAC,MAAM,KAAK,EAAG,WAAW,GAAG;IAClC,KAAK,CAAC,KAAK,EAAC,4DAA4D,EAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;IAC5G,mBAAmB,CAAC,OAAO,EAAE,CAAA;AAC9B,CAAC,CAAA","sourcesContent":["import { connectType, connectType2 } from '../interface.uts'\r\n\r\n\r\n\r\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.130.30', port = 502,\r\n// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\r\nexport const connect : connectType = function () {\r\n\tFPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,\r\n\t\tcompletion = (Bool : Boolean, Error : any) => {\r\n\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:10',Bool ? '链接成功' : '连接失败');\r\n\t\t\tif (Bool) {\r\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:12','开始读取');\r\n\t\t\t\tFPSSModbusTcpNative.readHoldingRegisters(startAddress = 0, count = 5, completion = (UInt16 : any, Error : any) => {\r\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:14','读取结束');\r\n\t\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:15',UInt16, JSON.stringify(Error));\r\n\t\t\t\t\t// 断开连接\r\n\t\t\t\t\tdisConnect()\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:20',Error);\r\n\t\t\t}\r\n\t\t})\r\n}\r\n// 直接导出disConnect函数，移除中间变量disConnect0\r\nexport const disConnect : connectType = function () {\r\n    __f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:26','断开连接');\r\n    FPSSModbusTcpNative.disconnectModbusServer()\r\n}\r\nexport const myApi : connectType = function () {\r\n\t__f__('log','at uni_modules/fpss-modbus-tcp/utssdk/app-ios/index.uts:30',\"%c ✨ myApi??? ✨ \", \"color:#0ff;\");\r\n\tFPSSModbusTcpNative.myApiNa()\r\n}"]}