{"version":3,"sources":["uni_modules/fpss-modbus-tcpp/utssdk/interface.uts","uni_modules/fpss-modbus-tcpp/utssdk/unierror.uts","uni_modules/fpss-modbus-tcpp/utssdk/app-ios/index.uts"],"sourcesContent":["/**\r\n * interface.uts\r\n * uts插件接口定义文件，按规范定义接口文件可以在HBuilderX中更好的做到语法提示\r\n */\r\n\r\n/**\r\n * myApi 异步函数的参数，在type里定义函数需要的参数以及api成功、失败的相关回调函数。\r\n */\r\nexport type MyApiOptions = {\r\n  paramA : boolean\r\n  success ?: (res : MyApiResult) => void\r\n  fail ?: (res : MyApiFail) => void\r\n  complete ?: (res : any) => void\r\n}\r\n\r\n/**\r\n * 函数返回结果\r\n * 可以是void, 基本数据类型，自定义type, 或者其他类型。\r\n * [可选实现]\r\n */\r\nexport type MyApiResult = {\r\n  fieldA : number,\r\n  fieldB : boolean,\r\n  fieldC : string\r\n}\r\n\r\n/**\r\n * 错误码\r\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\r\n * - 9010001 错误信息1\r\n * - 9010002 错误信息2\r\n */\r\nexport type MyApiErrorCode = 9010001 | 9010002;\r\n/**\r\n * myApi 的错误回调参数\r\n */\r\nexport interface MyApiFail extends IUniError {\r\n  errCode : MyApiErrorCode\r\n};\r\n\r\n/* 异步函数定义 */\r\nexport type MyApi = (options : MyApiOptions) => void\r\n\r\n/* 同步函数定义 */\r\nexport type MyApiSync = (paramA : boolean) => MyApiResult","/* 此规范为 uni 规范，可以按照自己的需要选择是否实现 */\nimport { MyApiErrorCode, MyApiFail } from \"./interface.uts\"\n/**\n * 错误主题\n * 注意：错误主题一般为插件名称，每个组件不同，需要使用时请更改。\n * [可选实现]\n */\nexport const UniErrorSubject = 'uts-api';\n\n\n/**\n * 错误信息\n * @UniError\n * [可选实现]\n */\nexport const MyAPIErrors : Map<MyApiErrorCode, string> = new Map([\n  /**\n   * 错误码及对应的错误信息\n   */\n  [9010001, 'custom error mseeage1'],\n  [9010002, 'custom error mseeage2'],\n]);\n\n\n/**\n * 错误对象实现\n */\nexport class MyApiFailImpl extends UniError implements MyApiFail {\n\n  /**\n   * 错误对象构造函数\n   */\n  constructor(errCode : MyApiErrorCode) {\n    super();\n    this.errSubject = UniErrorSubject;\n    this.errCode = errCode;\n    this.errMsg = MyAPIErrors.get(errCode) ?? \"\";\n  }\n}\n","/**\r\n * 引用 iOS 系统库，示例如下：\r\n * import { UIDevice } from \"UIKit\";\r\n * [可选实现，按需引入]\r\n */\r\n\r\n/* 引入 interface.uts 文件中定义的变量 */\r\nimport { MyApiOptions, MyApiResult, MyApi, MyApiSync } from '../interface.uts';\r\n\r\n/* 引入 unierror.uts 文件中定义的变量 */\r\nimport { MyApiFailImpl } from '../unierror';\r\n\r\n/**\r\n * 引入三方库\r\n * [可选实现，按需引入]\r\n *\r\n * 在 iOS 平台引入三方库有以下两种方式：\r\n * 1、通过引入三方库framework 或者.a 等方式，需要将 .framework 放到 ./Frameworks 目录下，将.a 放到 ./Libs 目录下。更多信息[详见](https://uniapp.dcloud.net.cn/plugin/uts-plugin.html#ios-平台原生配置)\r\n * 2、通过 cocoaPods 方式引入，将要引入的 pod 信息配置到 config.json 文件下的 dependencies-pods 字段下。详细配置方式[详见](https://uniapp.dcloud.net.cn/plugin/uts-ios-cocoapods.html)\r\n *\r\n * 在通过上述任意方式依赖三方库后，使用时需要在文件中 import:\r\n * 示例：import { LottieLoopMode\t} from 'Lottie'\r\n */\r\n\r\n/**\r\n * UTSiOS 为平台内置对象，不需要 import 可直接调用其API，[详见](https://uniapp.dcloud.net.cn/uts/utsios.html)\r\n */\r\n\r\n/**\r\n * 异步方法\r\n *\r\n * uni-app项目中（vue/nvue）调用示例：\r\n * 1、引入方法声明 import { myApi } from \"@/uni_modules/uts-api\"\r\n * 2、方法调用\r\n * myApi({\r\n *   paramA: false,\r\n *   complete: (res) => {\r\n *      __f__('log','at uni_modules/fpss-modbus-tcpp/utssdk/app-ios/index.uts:38',res)\r\n *   }\r\n * });\r\n *\r\n */\r\nexport const myApi : MyApi = function (options : MyApiOptions) {\r\n\r\n\t__f__('log','at uni_modules/fpss-modbus-tcpp/utssdk/app-ios/index.uts:45','in my api ??????');\r\n\t__f__('log','at uni_modules/fpss-modbus-tcpp/utssdk/app-ios/index.uts:46',FPSSModbusTcpNative.connectToModbusServer('192.168.110.88', 502, (a, b) => {\r\n\t\t__f__('log','at uni_modules/fpss-modbus-tcpp/utssdk/app-ios/index.uts:47',a, b);\r\n\t}));\r\n\r\n\tif (options.paramA == true) {\r\n\t\t// 返回数据\r\n\t\tconst res : MyApiResult = {\r\n\t\t\tfieldA: 85,\r\n\t\t\tfieldB: true,\r\n\t\t\tfieldC: 'some message'\r\n\t\t};\r\n\t\toptions.success?.(res);\r\n\t\toptions.complete?.(res);\r\n\r\n\t} else {\r\n\t\t// 返回错误\r\n\t\tlet failResult = new MyApiFailImpl(9010001);\r\n\t\toptions.fail?.(failResult)\r\n\t\toptions.complete?.(failResult)\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * 同步方法\r\n *\r\n * uni-app项目中（vue/nvue）调用示例：\r\n * 1、引入方法声明 import { myApiSync } from \"@/uni_modules/uts-api\"\r\n * 2、方法调用\r\n * myApiSync(true);\r\n *\r\n */\r\nexport const myApiSync : MyApiSync = function (paramA : boolean) : MyApiResult {\r\n\t// 返回数据，根据插件功能获取实际的返回值\r\n\tconst res : MyApiResult = {\r\n\t\tfieldA: 85,\r\n\t\tfieldB: paramA,\r\n\t\tfieldC: 'some message'\r\n\t};\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * 更多插件开发的信息详见：https://uniapp.dcloud.net.cn/plugin/uts-plugin.html\r\n */"],"names":[],"mappings":";;AAQ2B;;aAAf;;;;IACV,mBAAS,IAAO,QAAA;IAChB,wBAAY,KAAM,gBAAgB,IAAI,EAAA;IACtC,qBAAS,KAAM,cAAc,IAAI,EAAA;IACjC,yBAAa,KAAM,GAAG,KAAK,IAAI,EAAA;;;;;;;;;;;;;;;;;;;;;;;;wCAHtB,IAAO;8CACJ,KAAM,gBAAgB,IAAI;wCAC7B,KAAM,cAAc,IAAI;gDACpB,KAAM,GAAG,KAAK,IAAI;;;AAQP;;aAAd;;;;IACV,mBAAS,QAAM,CAAC;IAChB,mBAAS,IAAO,QAAC;IACjB,mBAAS,MAAM,CAAA;;;;;;;;;;;;;;;;;;;;;;wCAFN,QAAM;wCACN,IAAO;wCACP,MAAM;;;iBASL,iBAAiB,QAAO;gBAInB,YAAkB;QACjC,SAAU;;iBAIA,WAAS,SAAU,iBAAiB,IAAI;iBAGxC,eAAa,QAAS,IAAO,KAAK;ACrCvC,WAAM,kBAAkB;AAQxB,WAAM,aAAc,oBAAoB,MAAM,IAAI,AAAI,IAAI;IAI/D;AAAC,eAAO;QAAE;KAAwB;IAClC;AAAC,eAAO;QAAE;KAAwB;CACnC;AAMK;;aAAO,gBAAsB;IAKjC,YAAY,EAAA,uBAAwB,CAAA;QAClC,KAAK;QACL,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,CAAC,YAAY;IAC5C;;ACKK,WAAM,eAAgB;CAAU,EAAA,qBAAsB;AAE5D,YAA0E;AAC1E,YAA0E,oBAAoB,qBAAqB,CAAC,kBAAkB,GAAG,EAAE;GAAC,KAAG;AAC9I,YAA0E,GAAG;;AAG9E,IAAI,QAAQ,MAAM,IAAI,IAAI,EAAE;IAE3B,IAAM;QACL,CAAA,SAAQ,EAAE;QACV,CAAA,SAAQ,IAAI;QACZ,CAAA,SAAQ;;IAET,QAAQ,OAAO,EAAG;IAClB,QAAQ,QAAQ,EAAG;OAEb;IAEN,IAAI,aAAa,cAAkB,OAAO;IAC1C,QAAQ,IAAI,EAAG;IACf,QAAQ,QAAQ,EAAG;;;AAcd,WAAM,uBAAwB;CAAU,EAAA,QAAS,IAAO;AAE9D,IAAM;IACL,CAAA,SAAQ,EAAE;IACV,CAAA,SAAQ;IACR,CAAA,SAAQ;;AAET,OAAO;;AF5EmB;;;IACzB,WAAA,QAAS,IAAO,QAAA;IAChB,WAAA,SAAS,YAA6B;IACtC,WAAA,MAAM,YAA2B;IACjC,WAAA,UAAU,YAAqB;;wBA6BZ,SAAU,2BAAiB,IAAI;;;;SA/BtC,KAAM,gBAAgB,IAAI;yBAA1B;;;SACH,KAAM,cAAc,IAAI;sBAAxB;;;SACI,KAAM,GAAG,KAAK,IAAI;0BAAlB;;;;4BAgCU,QAAS,IAAO,KAAK;qBAArB;;;;;qCAHJ,SAAU,2BAAiB,IAAI;yBAA/B;;yCAGI,QAAS,IAAO,KAAK;6BAArB"}