{"version":3,"sources":["uni_modules/my-test-plugin/utssdk/app-ios/index.uts"],"sourcesContent":["// import { UTSModule } from 'uts';\nimport { NWConnection, NWEndpoint, NWConnectionState, DispatchQueue } from \"Network\";\n\n// @UTSModule\nexport class ModbusTCPClient {\n    private connection: NWConnection;\n    private isConnected: boolean = false;\n\n    constructor(private host: string, private port: number) {\n        const endpoint = NWEndpoint.Host(this.host);\n        const portEndpoint = NWEndpoint.Port(this.port);\n        this.connection = NWConnection(endpoint, port: portEndpoint, using: .tcp);\n        \n        this.connection.stateUpdateHandler = (newState: NWConnectionState) => {\n            if (newState == 'ready') {\n                this.isConnected = true;\n                __f__('log','at uni_modules/my-test-plugin/utssdk/app-ios/index.uts:17',\"Connected to Modbus TCP server\");\n            } else if (newState == 'failed') {\n                this.isConnected = false;\n                __f__('log','at uni_modules/my-test-plugin/utssdk/app-ios/index.uts:20',\"Connection failed\");\n            }\n        };\n    }\n\n    connect() {\n        this.connection.start(DispatchQueue.global());\n    }\n\n    readHoldingRegisters(address: number, count: number, callback: (data: number[] | null, error: string | null) => void) {\n        if (!this.isConnected) {\n            callback(null, \"Not connected\");\n            return;\n        }\n        const transactionId = Math.floor(Math.random() * 65535);\n        const request = [\n            (transactionId >> 8) & 0xFF, transactionId & 0xFF,\n            0, 0, // Protocol ID\n            0, 6, // Length\n            1, // Unit ID\n            3, // Function Code\n            (address >> 8) & 0xFF, address & 0xFF,\n            (count >> 8) & 0xFF, count & 0xFF\n        ];\n        this.connection.send(request, completion: .contentProcessed((error) => {\n            if (error) callback(null, error.localizedDescription);\n            else this.connection.receive(1, maximumLength: 65536, completion: (data: Uint8Array, _, _, receiveError) => {\n                if (receiveError) callback(null, receiveError.localizedDescription);\n                else if (data && data.length > 9 && data[7] == 3) {\n                    const byteCount = data[8];\n                    const values: number[] = [];\n                    for (let i = 0; i < byteCount / 2; i++) {\n                        values.push((data[9 + i * 2] << 8) | data[9 + i * 2 + 1]);\n                    }\n                    callback(values, null);\n                } else callback(null, \"Invalid response\");\n            });\n        }));\n    }\n\n    writeRegister(address: number, value: number, callback: (success: boolean, error: string | null) => void) {\n        if (!this.isConnected) {\n            callback(false, \"Not connected\");\n            return;\n        }\n        const transactionId = Math.floor(Math.random() * 65535);\n        const request = [\n            (transactionId >> 8) & 0xFF, transactionId & 0xFF,\n            0, 0, // Protocol ID\n            0, 6, // Length\n            1, // Unit ID\n            6, // Function Code\n            (address >> 8) & 0xFF, address & 0xFF,\n            (value >> 8) & 0xFF, value & 0xFF\n        ];\n        this.connection.send(request, completion: .contentProcessed((error) => {\n            if (error) callback(false, error.localizedDescription);\n            else this.connection.receive(1, maximumLength: 12, completion: (data: Uint8Array, _, _, receiveError) => {\n                if (receiveError) callback(false, receiveError.localizedDescription);\n                else if (data && data.length == 12 && data[7] == 6) {\n                    callback(true, null);\n                } else callback(false, \"Invalid response\");\n            });\n        }));\n    }\n}"],"names":[],"mappings":"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"}