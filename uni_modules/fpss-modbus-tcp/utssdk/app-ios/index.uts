import { connectType, connectType2 } from '../interface.uts'
import { UInt16 } from 'Swift';



// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.130.30', port = 502,
// FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,
export const connect : connectType = function () {
	FPSSModbusTcpNative.connectToModbusServer(host = '192.168.150.224', port = 502,
		completion = (Bool : Boolean, Error : any) => {
			console.log(Bool ? '链接成功' : '连接失败');
			if (Bool) {
				const startA : UInt16 = 0x00
				const countA : UInt16 = 5
				console.log(`开始读取起始地址:${startA}寄存器数量:${countA}`);
				FPSSModbusTcpNative.readHoldingRegisters(startAddress = startA, count = countA, completion = (UInt16 : any, Error : any) => {
					console.log('读取结束');
					console.log(UInt16, JSON.stringify(Error));
					// 断开连接
					disConnect()
				})
			} else {
				console.log(Error);
			}
		})
}
// 直接导出disConnect函数，移除中间变量disConnect0
export const disConnect : connectType = function () {
	console.log('断开连接');
	FPSSModbusTcpNative.disconnectModbusServer()
}
export const myApi : connectType = function () {
	console.log("%c ✨ myApi??? ✨ ", "color:#0ff;");
	FPSSModbusTcpNative.myApiNa()
}